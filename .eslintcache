[{"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js":"1","C:\\Work\\projects\\charlee\\src\\index.js":"2","C:\\Work\\projects\\charlee\\src\\app\\helpers.js":"3","C:\\Work\\projects\\charlee\\src\\app\\gallery\\Gallery.js":"4","C:\\Work\\projects\\charlee\\src\\app\\App.js":"5","C:\\Work\\projects\\charlee\\src\\app\\admin\\Admin.js":"6","C:\\Work\\projects\\charlee\\src\\app\\partials\\loader.js":"7","C:\\Work\\projects\\charlee\\src\\app\\partials\\file-uploader.js":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":597,"mtime":1608410987279,"results":"11","hashOfConfig":"10"},{"size":397,"mtime":1608410950531,"results":"12","hashOfConfig":"10"},{"size":3129,"mtime":1608410830554,"results":"13","hashOfConfig":"10"},{"size":8671,"mtime":1608495048486,"results":"14","hashOfConfig":"10"},{"size":6971,"mtime":1608497775713,"results":"15","hashOfConfig":"10"},{"size":241,"mtime":1608413035776,"results":"16","hashOfConfig":"10"},{"size":1959,"mtime":1608498154648,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11grl55",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js",[],"C:\\Work\\projects\\charlee\\src\\index.js",[],["37","38"],"C:\\Work\\projects\\charlee\\src\\app\\helpers.js",[],"C:\\Work\\projects\\charlee\\src\\app\\gallery\\Gallery.js",["39","40","41","42"],"import React, { useEffect, useState } from 'react';\r\nimport './Gallery.css';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\n\r\nfunction GallerySection(props) {\r\n\r\n  const [pictures, setPictures] = useState([])\r\n\r\n    const [ showSlider, setShowSlider ] = useState(false)\r\n    const [ currentImgIndex, setCurrentImgIndex ] = useState(0)\r\n  \r\n    console.log(currentImgIndex)\r\n\r\n    useEffect(() => {\r\n      getPictures()\r\n    },[])\r\n\r\n    function getPictures() {\r\n      fetch('/pictures')\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        //console.log(JSON.parse(res));\r\n        setPictures(JSON.parse(res));\r\n      })\r\n    }\r\n  \r\n    function onGalleryImgClick(img, index){\r\n      setShowSlider(true)\r\n      setCurrentImgIndex(index)\r\n    }\r\n  \r\n    const galleryDisplay = pictures.map((picture, index) => (\r\n      <GalleryImage\r\n          picture={picture}\r\n          index={index}\r\n          onGalleryImgClick={onGalleryImgClick}\r\n          >\r\n      </GalleryImage>\r\n    ))\r\n  \r\n    function onOverlayClick() {\r\n      setShowSlider(false)\r\n    }\r\n      \r\n    let overlayDisplay;\r\n    if(showSlider === true){\r\n      overlayDisplay = (\r\n        <SlideShow\r\n          onOverlayClick={onOverlayClick}\r\n          pictures={pictures}\r\n          currentImgIndex={currentImgIndex}\r\n          setCurrentImgIndex={setCurrentImgIndex}\r\n        />\r\n      )\r\n    }\r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n    return(\r\n      <section id=\"gallery\"> \r\n        <SRLWrapper \r\n         options={options}>\r\n          <div id=\"gallery-pictures\">{galleryDisplay}</div>\r\n        </SRLWrapper>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  function GalleryImage(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    function onGalleryImgLoad() {\r\n      setIsVisible(true)            \r\n    }\r\n\r\n    let cssClass = \"gallery-img-item\";\r\n    \r\n    if (isVisible === true) cssClass += \"  is-visible\";\r\n\r\n    return(\r\n        <div className={cssClass}>\r\n          <div className=\"image-container\">\r\n            <img onLoad={onGalleryImgLoad} src={props.picture.filename}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  function SlideShow(props) {\r\n\r\n    const [nextIndex, setNextIndex] = useState(null)\r\n\r\n    function onNavButtonClick(value) {\r\n      let indexValue = value;\r\n      if(value < 0) indexValue = props.pictures.length -1;\r\n      else if(value === props.pictures.length) indexValue = 0; \r\n      setNextIndex(indexValue)\r\n      props.setCurrentImgIndex(indexValue)\r\n    }\r\n  \r\n    return(\r\n      <div id=\"overlay\">\r\n        <div id=\"overlay-black\" onClick={props.onOverlayClick}></div>\r\n         <div id=\"slideshow\">\r\n           <div className=\"nav-button left\" onClick={() => onNavButtonClick(props.currentImgIndex -1)}></div>\r\n            <img src={props.pictures[props.currentImgIndex].filename}/>\r\n            <div className=\"nav-button right\" onClick={() => onNavButtonClick(props.currentImgIndex +1)}></div>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  export default GallerySection;","C:\\Work\\projects\\charlee\\src\\app\\App.js",["43","44","45","46","47","48","49","50"],"C:\\Work\\projects\\charlee\\src\\app\\admin\\Admin.js",["51","52","53","54","55","56","57","58","59","60"],"import React, {useState, useEffect} from 'react';\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport './Admin.css';\r\nimport FileUploader from '../partials/file-uploader';\r\nimport $ from 'jquery';\r\n\r\n\r\nfunction Admin(props) {\r\n\r\n  const [dbTables, setDbTables] = useState([]);\r\n  const [currentSection, setCurrentSection] = useState('admin');\r\n\r\n  useEffect(() => {\r\n    getDbTables()\r\n  },[])\r\n\r\n  function getDbTables() {\r\n    fetch('/tables')\r\n    .then(res => res.text())\r\n    .then(res =>{\r\n      console.log(JSON.parse(res));\r\n      setDbTables(JSON.parse(res));\r\n    })\r\n  }\r\n\r\n  const navItemsDisplay = dbTables.map((table, index) => {\r\n    let menuItemClassName = 'item';\r\n    if (currentSection === table.table_name) menuItemClassName += ' active';\r\n    return (\r\n      <a className={menuItemClassName} onClick={() => setCurrentSection(table.table_name)}>{table.table_name}</a>\r\n    )\r\n  })\r\n\r\n  let contentDisplay = <div>Hello im admin homepage</div>\r\n  if (currentSection !== \"admin\"){\r\n    contentDisplay = dbTables.map((table, index) => {\r\n      if (currentSection === table.table_name) {\r\n        return(\r\n          <DBTableRender fetchUrl={\"/\" + table.table_name}/>\r\n        )\r\n      }\r\n    })\r\n  }\r\n    \r\n  let mainMenuItemClassName = 'item';\r\n  if (currentSection === \"admin\") mainMenuItemClassName += ' active';\r\n\r\n  return(\r\n    <section id=\"admin\">\r\n      <nav>\r\n        <div className=\"ui secondary pointing menu\">\r\n          <a className={mainMenuItemClassName} onClick={() => setCurrentSection(\"admin\")}>Admin main</a>\r\n          {navItemsDisplay}\r\n        </div>\r\n      </nav>\r\n      {contentDisplay}\r\n    </section>\r\n  )\r\n}\r\n\r\nfunction DBTableRender(props) {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const [showForm, setShowForm] = useState(false)\r\n\r\n    useEffect(() => {\r\n        getItems()\r\n    },[])\r\n\r\n    function getItems()  {\r\n        fetch(props.fetchUrl)\r\n        .then(res => res.text())\r\n        .then(res =>{\r\n          const newItems = JSON.parse(res);\r\n          let columnArray = []\r\n          for (var i in newItems[0]){\r\n            columnArray.push(i)\r\n          }\r\n            setColumns(columnArray)\r\n           setItems(JSON.parse(res));\r\n        })\r\n    }\r\n\r\n    const columnsDisplay = columns.map((column, index) => (\r\n        <th scope=\"col\">\r\n            {column}\r\n        </th>\r\n    ))\r\n\r\n    const itemsDisplay = items.map((item, index) => (\r\n      <tr>\r\n        {\r\n          columns.map((column, index) => {\r\n\r\n            let cellDisplay = item[column];\r\n            if (column === 'update') {\r\n                cellDisplay =(\r\n                    <span>hello cbcdkjsjkn</span>\r\n                )\r\n            }\r\n            return(\r\n                <td>\r\n                  {cellDisplay}\r\n                </td>\r\n              )\r\n          })\r\n        }\r\n        <td>\r\n          <TableRowUserMenu/>\r\n        </td>\r\n      </tr>\r\n    ))\r\n\r\n    let tableDisplay, formDisplay;\r\n    if (showForm === false) {\r\n      tableDisplay = (\r\n        <React.Fragment>\r\n          <a onClick={() => setShowForm(true)}className=\"ui green basic button\">\r\n            <i className=\"plus icon\"></i>\r\n            Add\r\n          </a>\r\n            <table className=\"ui celled table\">\r\n            <thead>\r\n                <tr>\r\n                {columnsDisplay}\r\n                <th>update</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {itemsDisplay}\r\n            </tbody>\r\n            </table>\r\n        </React.Fragment>\r\n      )\r\n    } else {\r\n      formDisplay = (\r\n        <AddItemForm\r\n          columns={columns}\r\n        />\r\n      )\r\n    }\r\n\r\n    return(\r\n      <div className=\"admin-table-container\">\r\n        {tableDisplay}\r\n        {formDisplay}\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction TableRowUserMenu(props) {\r\n  \r\n  return(\r\n    <div className=\"table-row-user-menu\">\r\n      <button className=\"ui icon blue button\">\r\n        <i className=\"pencil alternate icon\"></i>\r\n      </button>\r\n      <button className=\"ui icon red button\">\r\n        <i className=\"trash icon\"></i>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AddItemForm(props) {\r\n\r\n  const [formData, setFormData] = useState({})\r\n\r\n  function onUpdateFormField(obj) {\r\n    const newFormData = {\r\n    ...formData, ...obj\r\n    }\r\n    setFormData(newFormData)\r\n  }\r\n\r\n  function onFormSubmit() {\r\n    console.log(formData);\r\n    $.ajax({\r\n      url:'/pictures',\r\n      type:'POST',\r\n      data: formData\r\n    }).done(function(res) {\r\n      console.log(res)\r\n    })\r\n  }\r\n\r\n  const formFieldsDisplay = props.columns.map ((column, index) => {\r\n    \r\n    let showFormField = true;\r\n    if (column === 'created_at' || column.indexOf('_id') > -1 ) showFormField = false;\r\n    if (showFormField === true) {\r\n      return(\r\n        <FormField \r\n          key={index}\r\n          column={column}\r\n          onUpdateFormField={onUpdateFormField}\r\n        />\r\n      )\r\n    }\r\n   \r\n  })\r\n\r\n  return(\r\n    <div className=\"add-item-form\">\r\n      <div className=\"ui form\">\r\n        {formFieldsDisplay}\r\n        <button className=\"ui button\" onClick={onFormSubmit}>Lägg till bild</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction FormField(props) {\r\n\r\n  const [ data, setData ] = useState(\"\")\r\n\r\n  useEffect (()=>{\r\n    let obj = {};\r\n    obj[props.column] = data;\r\n    props.onUpdateFormField(obj)\r\n  },[data])\r\n\r\n  function updateInput(value) {\r\n    setData(value)\r\n  }\r\n\r\n  let formFieldDisplay = (\r\n    <React.Fragment>\r\n      <label>Titel</label>\r\n      <input value={data} onChange={e => updateInput(e.target.value)} placeholder={props.column} type=\"text\"/>\r\n    </React.Fragment>\r\n  )\r\n\r\n  if (props.column === 'filename') {\r\n    formFieldDisplay = <FileUploader updateInput={updateInput}/>  \r\n  } else if (props.column === 'picture_type') {\r\n    formFieldDisplay = (\r\n      <React.Fragment>\r\n        <label>Gallery</label>\r\n        <select onChange={e => updateInput(e.target.value)}>\r\n          <option value=\"\">Gallery</option>\r\n          <option value=\"paintings\">Tavlor</option>\r\n          <option value=\"sculptures\">Skulpturer</option>\r\n        </select>\r\n      </React.Fragment>\r\n    )\r\n  } else if (props.column === 'description') {\r\n    formFieldDisplay = (\r\n      <React.Fragment>\r\n        <label>Beskrivning</label>\r\n        <textarea onChange={e => updateInput(e.target.value)} rows=\"2\">\r\n          {data}\r\n        </textarea>\r\n      </React.Fragment>\r\n    )\r\n  } else if (props.column === 'price') {\r\n    formFieldDisplay = (\r\n      <React.Fragment>\r\n        <label>Pris</label>\r\n        <div class=\"ui right labeled input\">\r\n          <input value={data} onChange={e => updateInput(e.target.value)} type=\"number\"/>\r\n          <div class=\"ui basic label\">\r\n            kr\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <div className=\"field\">\r\n      {formFieldDisplay}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Admin;","C:\\Work\\projects\\charlee\\src\\app\\partials\\loader.js",[],"C:\\Work\\projects\\charlee\\src\\app\\partials\\file-uploader.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":48,"column":7,"nodeType":"67","messageId":"68","endLine":48,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":90,"column":13,"nodeType":"71","endLine":90,"endColumn":74},{"ruleId":"65","severity":1,"message":"72","line":98,"column":12,"nodeType":"67","messageId":"68","endLine":98,"endColumn":21},{"ruleId":"69","severity":1,"message":"70","line":113,"column":13,"nodeType":"71","endLine":113,"endColumn":72},{"ruleId":"65","severity":1,"message":"73","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":46},{"ruleId":"65","severity":1,"message":"74","line":1,"column":48,"nodeType":"67","messageId":"68","endLine":1,"endColumn":52},{"ruleId":"65","severity":1,"message":"75","line":8,"column":23,"nodeType":"67","messageId":"68","endLine":8,"endColumn":29},{"ruleId":"69","severity":1,"message":"70","line":149,"column":13,"nodeType":"71","endLine":149,"endColumn":43},{"ruleId":"69","severity":1,"message":"70","line":198,"column":11,"nodeType":"71","endLine":198,"endColumn":42},{"ruleId":"69","severity":1,"message":"70","line":234,"column":48,"nodeType":"71","endLine":234,"endColumn":85},{"ruleId":"76","severity":1,"message":"77","line":292,"column":26,"nodeType":"78","messageId":"79","endLine":292,"endColumn":27,"suggestions":"80"},{"ruleId":"76","severity":1,"message":"77","line":292,"column":51,"nodeType":"78","messageId":"79","endLine":292,"endColumn":52,"suggestions":"81"},{"ruleId":"65","severity":1,"message":"82","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"83","line":2,"column":16,"nodeType":"67","messageId":"68","endLine":2,"endColumn":21},{"ruleId":"65","severity":1,"message":"75","line":2,"column":23,"nodeType":"67","messageId":"68","endLine":2,"endColumn":29},{"ruleId":"84","severity":1,"message":"85","line":30,"column":7,"nodeType":"71","endLine":30,"endColumn":92},{"ruleId":"86","severity":1,"message":"87","line":36,"column":50,"nodeType":"88","messageId":"89","endLine":36,"endColumn":52},{"ruleId":"84","severity":1,"message":"85","line":52,"column":11,"nodeType":"71","endLine":52,"endColumn":91},{"ruleId":"90","severity":1,"message":"91","line":69,"column":7,"nodeType":"92","endLine":69,"endColumn":9,"suggestions":"93"},{"ruleId":"84","severity":1,"message":"85","line":119,"column":11,"nodeType":"71","endLine":119,"endColumn":81},{"ruleId":"86","severity":1,"message":"87","line":188,"column":64,"nodeType":"88","messageId":"89","endLine":188,"endColumn":66},{"ruleId":"90","severity":1,"message":"94","line":222,"column":5,"nodeType":"92","endLine":222,"endColumn":11,"suggestions":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'overlayDisplay' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'nextIndex' is assigned a value but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'Switch' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["98","99"],["100","101"],"'Link' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["103"],"no-global-assign","no-unsafe-negation",{"messageId":"104","fix":"105","desc":"106"},{"messageId":"107","fix":"108","desc":"109"},{"messageId":"104","fix":"110","desc":"106"},{"messageId":"107","fix":"111","desc":"109"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"removeEscape",{"range":"116","text":"117"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"118","text":"119"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"120","text":"117"},{"range":"121","text":"119"},"Update the dependencies array to be: [getItems]",{"range":"122","text":"123"},"Update the dependencies array to be: [data, props]",{"range":"124","text":"125"},[6754,6755],"",[6754,6754],"\\",[6779,6780],[6779,6779],[1897,1899],"[getItems]",[5399,5405],"[data, props]"]