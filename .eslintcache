[{"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js":"1","C:\\Work\\projects\\charlee\\src\\index.js":"2","C:\\Work\\projects\\charlee\\src\\app\\helpers.js":"3","C:\\Work\\projects\\charlee\\src\\app\\gallery\\Gallery.js":"4","C:\\Work\\projects\\charlee\\src\\app\\App.js":"5","C:\\Work\\projects\\charlee\\src\\app\\admin\\Admin.js":"6","C:\\Work\\projects\\charlee\\src\\app\\partials\\loader.js":"7","C:\\Work\\projects\\charlee\\src\\app\\partials\\file-uploader.js":"8","C:\\Work\\projects\\charlee\\src\\app\\gallery\\SubGallery.js":"9","C:\\Work\\projects\\charlee\\src\\app\\admin\\DbTableRender.js":"10","C:\\Work\\projects\\charlee\\src\\app\\admin\\ItemForm.js":"11","C:\\Work\\projects\\charlee\\src\\app\\admin\\textEditor.js":"12","C:\\Work\\projects\\charlee\\src\\app\\partials\\signin.js":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":597,"mtime":1608410987279,"results":"16","hashOfConfig":"15"},{"size":1735,"mtime":1611361146127,"results":"17","hashOfConfig":"15"},{"size":2207,"mtime":1610576296046,"results":"18","hashOfConfig":"15"},{"size":8426,"mtime":1611438627328,"results":"19","hashOfConfig":"15"},{"size":2600,"mtime":1611437659024,"results":"20","hashOfConfig":"15"},{"size":241,"mtime":1608413035776,"results":"21","hashOfConfig":"15"},{"size":3689,"mtime":1611356020670,"results":"22","hashOfConfig":"15"},{"size":7569,"mtime":1611357292528,"results":"23","hashOfConfig":"15"},{"size":10961,"mtime":1611361224178,"results":"24","hashOfConfig":"15"},{"size":9644,"mtime":1611361274835,"results":"25","hashOfConfig":"15"},{"size":1307,"mtime":1610572017113,"results":"26","hashOfConfig":"15"},{"size":1412,"mtime":1611439145262,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11grl55",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js",[],["63","64"],"C:\\Work\\projects\\charlee\\src\\index.js",[],["65","66"],"C:\\Work\\projects\\charlee\\src\\app\\helpers.js",[],["67","68"],"C:\\Work\\projects\\charlee\\src\\app\\gallery\\Gallery.js",["69","70"],"import React, { useEffect, useState } from 'react';\r\nimport './Gallery.css';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\n\r\nfunction GallerySection(props) {\r\n\r\n  const [pictures, setPictures] = useState([])\r\n  const [ currentImgIndex, setCurrentImgIndex ] = useState(0)\r\n  const [ isBlurred, setIsBlurred ] = useState(false); \r\n  \r\n    useEffect(() => {\r\n      getPictures()\r\n    },[])\r\n\r\n    function getPictures() {\r\n      fetch('/pictures')\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        setPictures(JSON.parse(res));\r\n      })\r\n    }\r\n  \r\n    function onGalleryImgClick(img, index){\r\n      setCurrentImgIndex(index)\r\n    }\r\n  \r\n    const galleryDisplay = pictures.map((picture, index) => (\r\n      <GalleryImage\r\n          picture={picture}\r\n          index={index}\r\n          onGalleryImgClick={onGalleryImgClick}\r\n          >\r\n      </GalleryImage>\r\n    ))\r\n  \r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n\r\n    const callbacks = {\r\n      onSlideChange: object => console.log(object),\r\n      onLightboxOpened: object => setIsBlurred(true),\r\n      onLightboxClosed: object => setIsBlurred(false),\r\n      onCountSlides: object => console.log(object)\r\n  };\r\n  \r\n    let galleryStyle;\r\n    if (isBlurred){\r\n      galleryStyle = {\r\n        filter:\"blur(5px)\"\r\n      }\r\n    }\r\n\r\n    return(\r\n      <section id=\"gallery\"> \r\n        <SRLWrapper \r\n          callbacks={callbacks}\r\n          options={options}>\r\n            <div id=\"gallery-pictures\" style={galleryStyle}>{galleryDisplay}</div>\r\n        </SRLWrapper>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  function GalleryImage(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    function onGalleryImgLoad() {\r\n      setIsVisible(true)            \r\n    }\r\n\r\n    let cssClass = \"gallery-img-item\";\r\n    \r\n    if (isVisible === true) cssClass += \"  is-visible\";\r\n\r\n    return(\r\n        <div className={cssClass}>\r\n          <div className=\"image-container\">\r\n            <img onLoad={onGalleryImgLoad} src={props.picture.filename}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  export default GallerySection;",["71","72"],"C:\\Work\\projects\\charlee\\src\\app\\App.js",["73","74","75","76","77","78"],"import React, { useEffect, useState, Suspense, lazy } from 'react';\nimport './App.css';\nimport GallerySection from './gallery/Gallery';\nimport $ from 'jquery';\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport { Link, Route } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Admin from './admin/Admin';\nimport SubGallery from './gallery/SubGallery';\nimport UserLogin from './partials/signin';\n\nfunction App(props) {\n\n  const [navigation, setNavigation] = useState([])\n\n  useEffect(() => {\n    getNavigation()\n  },[])\n\n  function getNavigation() {\n    fetch('/navigation')\n    .then(res => res.text())\n    .then(res =>{\n      setNavigation(JSON.parse(res));\n    })\n  }\n\n  let headerDisplay = <Header navigation={navigation}/>\n  if (window.location.href.indexOf('/admin') !== -1) headerDisplay=''\n\n  return (\n    <div className=\"app\">\n      <SimpleReactLightbox>\n        {headerDisplay}\n        <SectionsContainer\n          navigation={navigation} \n        />\n      </SimpleReactLightbox>  \n    </div>\n  );\n}\n\nfunction Header(props) {\n\n  const [ showdropMenu, setShowDropMenu ] = useState(false)\n\n  const navItemsDisplay = props.navigation.map((menuItem, index) => {\n    if (menuItem.title !== 'home') {\n      return (\n        <li key={index}><Link onClick={()=> setShowDropMenu(false)} to={menuItem.nav_link}>{menuItem.display_name}</Link></li>\n      )\n    }\n  })\n\n  let menuDisplay = (\n    <nav>\n      <ul>\n        {navItemsDisplay}\n      </ul>\n    </nav>\n  );\n  if (window.innerWidth < 577) {\n    menuDisplay = <i className={(showdropMenu === true ? 'close' : 'bars') +  \" icon\"} onClick={()=> setShowDropMenu(showdropMenu === true ? false : true)}></i>\n  } \n\n  let dropMenuDisplay;\n  if (showdropMenu === true) {\n    dropMenuDisplay = (\n      <div className=\"drop-menu-container\">\n        <ul>\n          {navItemsDisplay}\n        </ul>\n      </div>\n    )\n  }\n  return (\n    <header>\n      <h1>\n        <a id=\"main\" href=\"/\">Charlotte Karlbom</a>\n      </h1>\n        {menuDisplay}\n        {dropMenuDisplay}\n    </header>\n  )\n}\n\nfunction SectionsContainer(props) {\n\n  const sectionsDisplay = props.navigation.map((section,index) => {\n      let sectionHtmlDisplay = (\n        <section key={index} id={section.nav_link}>\n          <h2>{section.title}</h2>\n        </section>\n      )\n      \n      switch (section.title) {\n        case 'signin':\n          sectionHtmlDisplay = null;\n          break;\n        case 'home':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/\"><GallerySection/></Route>\n          )\n          break;\n        case 'paintings':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/paintings\"><PaintingsSection/></Route>\n          )\n          break;\n        case 'sculptures':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/sculptures\"><SculpturesSection/></Route>\n          )\n          break;\n        case 'contact':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/contact\"><ContactSection/></Route>\n          )\n          break;\n        case 'about':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/about\"><AboutSection/></Route>\n          )\n          break;\n        default:\n        sectionHtmlDisplay = (\n          <Route exact path=\"/\"><GallerySection/></Route>\n        )\n          break;\n      }\n\n      return (\n        <React.Fragment key={index}>\n          {sectionHtmlDisplay}\n        </React.Fragment>\n      )\n    }\n  )\n\n  const adminSectionDisplay = (\n    <Route path=\"/admin\">\n        <Admin/>\n    </Route>\n  )\n  return(\n    <main>\n      {sectionsDisplay}\n      {adminSectionDisplay}\n      <Route exact path=\"/signin\">\n        <UserLogin/>\n      </Route>\n    </main>\n  )\n}\n\nfunction PaintingsSection(props) {\n\n  return(\n    <section id='paintings'>\n      <SubGallery pictureType={'paintings'}/>\n    </section>\n  )\n}\n\nfunction SculpturesSection(props) {\n\n  return(\n    <section id='sculptures'>\n      <SubGallery pictureType={'sculpture'}/>\n    </section>\n  )\n}\n\nfunction AboutSection(props) {\n\n  const [aboutData, setAboutData] = useState('')\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getAbout()\n  },[])\n\n  function getAbout() {\n    fetch('/about')\n    .then(res => res.text())\n    .then(res =>{\n      setAboutData(JSON.parse(res)[0]);\n      setLoading(false)\n    })\n  }\n\n  let imgDisplay = (\n  <div class=\"ui placeholder\">\n    <div class=\"image\"></div>\n  </div>\n  )\n\n  let textDisplay = (\n    <div class=\"ui placeholder\">\n      <div class=\"paragraph\">\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n      </div>\n      <div class=\"paragraph\">\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n      </div>\n    </div>\n  )\n  if (loading === false) {\n    imgDisplay = <img src={aboutData.profile_img}/>\n    textDisplay = <div dangerouslySetInnerHTML={{__html:aboutData.about_text}}></div>\n  }\n\n  return (\n   <section id=\"about\">\n     <div className=\"title\">\n       <h1>Om mig</h1>\n      </div>\n     <div className=\"row\">\n        <div className=\"col-4\">\n          <div className=\"profile-img-container\">\n            {imgDisplay}\n          </div>\n        </div>\n        <div className=\"col-8\">\n          <div className=\"description\">\n            {textDisplay}\n          </div>\n        </div>\n      </div>\n   </section>\n  )\n}\n\nfunction ContactSection(props) {\n\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [errors, setErrors] = useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  function onNameChange(e) {\n    setName(e.target.value)\n  }\n\n  function onEmailChange(e) {\n    setEmail(e.target.value)\n  }\n\n  function onMessageChange(e) {\n    setMessage(e.target.value)\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let newErrors = [];\n\n    var letters\n    if (name.length === 0) {\n      const nameError = {\n        msg: \"Write something here\", \n        type: \"name\"\n      }\n      newErrors.push(nameError)\n    }\n    else if (!name.match(letters)){\n      const nameError = {\n        msg: \"Please, don't use symbols\", \n        type: \"name\"\n      }\n      newErrors.push(nameError)\n    }\n\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!re.test(String(email).toLowerCase())) {\n        const emailError = {\n          msg: \"Please, use a valid email\", \n          type: \"email\"\n        }\n        newErrors.push(emailError)\n      }\n\n\n    setErrors(newErrors)\n    if (newErrors.length === 0) {\n      postMessage();\n    }\n}\n\nfunction postMessage() {\n\n\n  $.ajax({\n    url:'/messages',\n    type:'POST',\n    data: {name:name, email:email, msg:message }\n  }).done(function(res) {\n    setIsSubmitted(true)\n    setTimeout(() => {\n      window.location.href = '/'\n    }, 3000);\n  })\n}\n\n  let nameErrorDisplay, emailErrorDisplay;\n  if (errors.length > 0) {\n    errors.forEach(function(error, index){\n     if (error.type === \"name\") nameErrorDisplay = <small>{error.msg}</small>\n      else if (error.type === \"email\") emailErrorDisplay = <small>{error.msg}</small>\n    })\n  }\n\n  let formDisplay = (\n    <div id=\"contact-container\">\n      <form className=\"ui form\">\n        <div className=\"field\">\n          <label>Namn</label>\n          <input type=\"text\" value={name} className=\"form-control\" placeholder=\"Namn\" onChange={(e) => onNameChange(e)}/>\n          {nameErrorDisplay}\n        </div>\n        <div className=\"field\">\n          <label>Emailadress</label>\n          <input type=\"email\" value={email} className=\"form-control\" placeholder=\"Email\" onChange={(e) => onEmailChange(e)}/>\n          {emailErrorDisplay}\n        </div>\n        <div className=\"field\">\n          <label>Ditt meddelande</label>\n          <textarea className=\"form-control\" rows=\"5\" onChange={(e) => onMessageChange(e)}>{message}</textarea>\n        </div>\n        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"ui submit button\">Skicka meddelande</button>\n      </form>\n    </div>\n  )\n\n  if (isSubmitted === true) formDisplay=<p>Tack för ditt meddelande!</p>\n\n  return(\n    <section id=\"contact\">\n      {formDisplay}\n    </section>\n  )\n}\n\nexport default App;\n",["79","80"],"C:\\Work\\projects\\charlee\\src\\app\\admin\\Admin.js",["81","82"],"C:\\Work\\projects\\charlee\\src\\app\\partials\\loader.js",[],"C:\\Work\\projects\\charlee\\src\\app\\partials\\file-uploader.js",["83","84"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './file-uploader.css';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nfunction FileUpload(props) {\r\n    const [file, setFile] = useState(''); // storing the uploaded file    // storing the recived file from backend\r\n    let initData = { name: \"\", path: \"\" };\r\n    if (props.existingImg) initData.path = props.existingImg;\r\n    const [data, getFile] = useState(initData);\r\n    const [progress, setProgress] = useState(0); // progess bar\r\n    const [imgMarginTop, setImgMarginTop] = useState(0);\r\n    const [showImg, setShowImg] = useState(false);\r\n\r\n    const el = useRef(); // accesing input element\r\n\r\n    useEffect(()=> {\r\n        if (file !== '') uploadFile()\r\n    },[file])\r\n\r\n    function handleDropUploader(files) {\r\n        setProgress(0)\r\n        const file = files[0]\r\n        setFile(file)\r\n    }\r\n\r\n    function onUploadedImgLoad(e) {\r\n        const parentDivHeight = document.getElementById('inner-drop-zone').offsetHeight\r\n        const imgHeight = e.target.clientHeight\r\n        const newImgMarginTop = (parentDivHeight - imgHeight) / 2;\r\n        setImgMarginTop(newImgMarginTop)\r\n        setShowImg(true)\r\n    } \r\n\r\n    const uploadFile = () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file); // appending file\r\n        axios.post('http://localhost:80/upload', formData, {\r\n            onUploadProgress: (ProgressEvent) => {\r\n                let progress = Math.round(\r\n                ProgressEvent.loaded / ProgressEvent.total * 100);\r\n                setProgress(progress);\r\n            }\r\n        }).then(res => {\r\n            getFile({ name: res.data.name,\r\n                     path: \"http://localhost:80\" + res.data.path\r\n                   })\r\n            props.updateInput(res.data.path)\r\n        }).catch(err => console.log(err))}\r\n        \r\n    let instructionContainerDisplay;\r\n    if (file === '' && !data.path) {\r\n        instructionContainerDisplay = (\r\n            <div className=\"instruction-container\">\r\n                <i className=\"plus big icon\"></i>\r\n                <hr/>\r\n                <span>Dra bild hit för att lägga till, eller klicka på plus ikonen</span>\r\n            </div> \r\n        )\r\n    }\r\n\r\n    let progressBarClassNames = 'ui progress progress-bar';\r\n    if (progress > 0 && progress < 100) progressBarClassNames = 'ui active progress progress-bar';\r\n    else if (progress === 100) progressBarClassNames += ' success';\r\n\r\n    return (\r\n        <div id=\"file-upload-container\">\r\n\r\n            <Dropzone onDrop={acceptedFiles => handleDropUploader(acceptedFiles)}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <div id=\"inner-drop-zone\" {...getRootProps()}>\r\n                        <input {...getInputProps()} accept='image/*'/>\r\n                        {instructionContainerDisplay}\r\n                        <div className=\"uploaded-img\">\r\n                            {data.path && \r\n                                <img src={data.path} \r\n                                alt={data.name} \r\n                                style={{marginTop:imgMarginTop + 'px', opacity:(showImg === true ? '1':'0')}} \r\n                                onLoad={e=>onUploadedImgLoad(e)}/>\r\n                            }\r\n                        </div>\r\n                    </div>                    \r\n                )}\r\n            </Dropzone>\r\n            <div className={progressBarClassNames} style={{ width: \"100%\" }}>\r\n                <div className=\"bar\" style={{ width: progress + '%', minWidth: \"0px\" }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;","C:\\Work\\projects\\charlee\\src\\app\\gallery\\SubGallery.js",["85","86","87","88","89","90","91","92","93"],"C:\\Work\\projects\\charlee\\src\\app\\admin\\DbTableRender.js",["94","95","96","97","98","99","100","101"],"import React, { useState, useEffect } from 'react';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\nimport ItemForm from './ItemForm';\r\nimport $ from 'jquery';\r\nimport { renderDisplayName, renderTableColumnsArray } from '../helpers';\r\n\r\nfunction DBTableRender(props) {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const [selectedItem, setSelectedItem] = useState(null)\r\n    const [sortBy, setSortBy] = useState('created_at')\r\n    const [messages, setMessages] = useState([])\r\n    console.log(messages)\r\n\r\n    useEffect(() => {\r\n        getItems()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      if (selectedItem !== null) setShowForm(true)\r\n  },[selectedItem])\r\n\r\n  function onBackButtonClick(){\r\n    setShowForm(false);\r\n    getItems();\r\n  }\r\n\r\n  function removeMessage(index) {\r\n    let newMessages = [\r\n\r\n    ]\r\n    messages.forEach(function(msg, i){\r\n      if (i !== index) newMessages.push(msg)\r\n    })\r\n    setMessages(newMessages)\r\n  }\r\n\r\n    function getItems()  {\r\n        setLoading(true)\r\n        fetch(props.fetchUrl)\r\n        .then(res => res.text())\r\n        .then(res =>{\r\n          const newItems = JSON.parse(res);\r\n          let columnArray = []\r\n          for (var i in newItems[0]){\r\n            columnArray.push(i)\r\n          }\r\n          columnArray = renderTableColumnsArray(columnArray, props.fetchUrl)\r\n          setColumns(columnArray)\r\n          if (props.fetchUrl !== '/about') setItems(JSON.parse(res))\r\n          else {\r\n            setSelectedItem(JSON.parse(res)[0]);\r\n            setShowForm(true);\r\n          }\r\n\r\n          window.scrollTo({top:0,behavior:'smooth'})\r\n          setLoading(false)\r\n        })\r\n    }\r\n\r\n    function beforeDeleteItem(item) {\r\n      console.log(\"before delete item\");\r\n        if (props.fetchUrl === '/messages') deleteItem(item)\r\n        else deleteFile(item)\r\n    }\r\n\r\n    function deleteFile(item) {\r\n      console.log(\"delete file\");\r\n      setLoading(true)\r\n      $.ajax({\r\n        url:'/delete',\r\n        type:'POST',\r\n        data:{path:item.filename}\r\n      }).done(function(res){\r\n        deleteItem(item)\r\n      })\r\n    }\r\n\r\n    function deleteItem(item) {\r\n      console.log(\"delete\")\r\n        $.ajax({\r\n            url:'http://localhost:80'+ props.fetchUrl + '/' + (item.picture_id ? item.picture_id : item.msg_id),\r\n            type:'DELETE'\r\n          }).done(function(res) {\r\n            beforeGetItems('delete', item, 'success')\r\n          })\r\n    }\r\n\r\n    function onReadButtonClick(item) {\r\n        $.ajax({\r\n            url:'http://localhost:80'+ props.fetchUrl + '/' + (item.picture_id ? item.picture_id : item.msg_id),\r\n            type:'PUT', \r\n            data: {read:(item.read === true ? false : true)}\r\n          }).done(function(res) {\r\n            getItems();\r\n          })\r\n    }\r\n\r\n    function onFinishFormSubmit(action, item, type) {\r\n      setShowForm(false)\r\n      if (action) beforeGetItems(action, item, type)\r\n      else getItems()\r\n    }\r\n \r\n    function beforeGetItems(action, item, type) {\r\n      console.log(action, item, type)\r\n      const itemType = item.picture_id > -1 ? 'Bilden' : 'Meddelande';\r\n      let title = itemType + ' '\r\n      if (itemType === 'Bilden') {\r\n        if (action === 'create') title += 'är tillagd'\r\n        else if (action === 'update') title += 'är uppdaterad'\r\n        else title += 'är borttagen'\r\n      } \r\n      else title += 'är borttaget'\r\n      \r\n      const msg = {type:type, title:title}\r\n      const newMessages =[...messages, msg]\r\n      setMessages(newMessages)\r\n      getItems();\r\n    }\r\n\r\n    const excludedColumnsList = ['picture_id', 'msg_id', 'read']\r\n\r\n    const columnsDisplay = columns.map((column, index) => {\r\n      if (column.menuOnly === false) {\r\n        return(\r\n          <th key={index} scope=\"col\">\r\n              {column.displayName}\r\n          </th>\r\n      )\r\n      }\r\n    })\r\n\r\n    function sortItems(a, b) {\r\n      if (a[sortBy] < b[sortBy]) return -1;\r\n      if (a[sortBy] > b[sortBy]) return 1;\r\n      return 0\r\n    }\r\n\r\n    const itemsDisplay = items.sort(sortItems).map((item, index) => (\r\n      <tr className={item.read === true ? 'read' : ''} key={index}>\r\n        {columns.map((column, index) => {\r\n          if (column.menuOnly === false) {\r\n            let cellDisplay = item[column.columnName];\r\n            if (column.columnName === 'filename') {\r\n                cellDisplay =(\r\n                  <div className=\"img-thumbnail\">\r\n                    <img src={item[column.columnName]}/>\r\n                  </div>\r\n                )\r\n            } else if (column.columnName === 'created_at') {\r\n              let today = new Date(item[column.columnName]);\r\n              cellDisplay = today.getDate() + \".\"+ parseInt(today.getMonth()+1) +\".\"+today.getFullYear();\r\n            }\r\n            return(\r\n                <td key={index}>\r\n                  {cellDisplay}\r\n                </td>\r\n              )\r\n          }\r\n        })}\r\n        <td>\r\n          <TableRowUserMenu\r\n            item={item}\r\n            deleteItem={beforeDeleteItem}\r\n            setSelectedItem={setSelectedItem}\r\n            fetchUrl={props.fetchUrl}\r\n            onReadButtonClick={onReadButtonClick}\r\n          />\r\n        </td>\r\n      </tr>\r\n    ))\r\n\r\n    let tableDisplay, formDisplay;\r\n    if (showForm === false) {\r\n      console.log(items)\r\n      if (items.length === 0) {\r\n        tableDisplay = 'Inga meddelanden'\r\n      } else {\r\n        let addButtonDisplay;\r\n        if (props.fetchUrl === '/pictures') {\r\n          addButtonDisplay = (\r\n            <a onClick={() => setShowForm(true)}className=\"ui green basic button add-img-button\">\r\n              <i className=\"plus icon\"></i>\r\n              Lägg till bild\r\n            </a>\r\n          )\r\n        }\r\n  \r\n        let loadingDisplay;\r\n        if (loading === true) {\r\n          loadingDisplay = (\r\n            <div className=\"ui active inverted dimmer\">\r\n              <div className=\"ui text loader\"><b>loading...</b></div>\r\n            </div>\r\n        )\r\n        }\r\n  \r\n        tableDisplay = (\r\n          <React.Fragment>\r\n            <div className=\"table-header\">\r\n              <h1>{renderDisplayName(props.fetchUrl.split('/')[1])}</h1>\r\n              <div className=\"ui text menu\">\r\n                <div className=\"header item\">Sortera</div>\r\n                {columns.map((column, index) => (\r\n                  <a key={index} onClick={() => setSortBy(column.columnName)} className={'item ' + (sortBy === column.columnName ? 'active' : '')}>\r\n                    {column.displayName}\r\n                  </a>\r\n                ))}\r\n              </div>\r\n              {addButtonDisplay}\r\n            </div>\r\n            <div className={\"dimmable \" + props.fetchUrl.split('/')[1]}>\r\n              {loadingDisplay}\r\n              <table className=\"ui celled table\">\r\n              <thead>\r\n                  <tr>\r\n                  {columnsDisplay}\r\n                  <th>{props.fetchUrl === '/pictures' ? 'Redigera/ Ta bort bild' : 'Radera meddelande'}</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n              {itemsDisplay}\r\n              </tbody>\r\n              </table>\r\n            </div>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    } else {\r\n      formDisplay = (\r\n        <ItemForm\r\n          columns={columns}\r\n          selectedItem={selectedItem}\r\n          onFinishFormSubmit={onFinishFormSubmit}\r\n          onBackButtonClick={onBackButtonClick}\r\n          fetchUrl={props.fetchUrl}\r\n        />\r\n      )\r\n    }\r\n\r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div className=\"admin-table-container\">\r\n        <AdminMessagesContainer messages={messages} removeMessage={removeMessage}/>\r\n        <SRLWrapper options={options}>\r\n          {tableDisplay}\r\n        </SRLWrapper>\r\n        {formDisplay}\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction TableRowUserMenu(props) {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    function onApprovedDeleteClick() {\r\n      setOpen(false)\r\n  \r\n      props.deleteItem(props.item)\r\n    }\r\n  \r\n    let readButtonDisplay;\r\n\r\n    let editButtonDisplay;\r\n    if (props.fetchUrl === '/pictures') {\r\n      editButtonDisplay = (\r\n      <button className=\"ui icon blue button\" onClick={()=> props.setSelectedItem(props.item)}>\r\n        <i className=\"pencil alternate icon\"></i>\r\n      </button>) \r\n    } else {\r\n        readButtonDisplay = (\r\n            <button className=\"ui icon button\" onClick={()=> props.onReadButtonClick(props.item)}>\r\n              <i className={'envelope ' + (props.item.read === true ? 'open' : '') + '  outline icon'}></i>\r\n            </button>)\r\n    }\r\n    \r\n    return(\r\n      <div className=\"table-row-user-menu\">\r\n          {readButtonDisplay}\r\n          {editButtonDisplay}\r\n          <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='tiny'\r\n            trigger={<Button icon color='red'><Icon name='trash' /></Button>}\r\n          >\r\n            <Header icon>\r\n              <Icon name='trash alternate outline' />\r\n                Ta bort bild\r\n              </Header>\r\n            <Modal.Content>\r\n              <p>\r\n                Vill du radera den här bilden?\r\n              </p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> Nej\r\n              </Button>\r\n              <Button color='green' inverted onClick={() => onApprovedDeleteClick()}>\r\n                <Icon name='checkmark' /> Ja\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\nfunction AdminMessagesContainer(props) {\r\n\r\n  const messagesDisplay = props.messages.map((message, index) => (\r\n    <AdminMsg key={index} message={message} removeMessage={()=> props.removeMessage(index)}/>\r\n  ))\r\n\r\n  return(\r\n    <div id=\"messages-container\">\r\n      {messagesDisplay}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AdminMsg(props) {\r\n  const [fadeout, setFadeout] =useState(false)\r\n  \r\n  const message = props.message\r\n  \r\n  useEffect(()=> {\r\n    setTimeout(() => {\r\n      setFadeout(true)\r\n      setTimeout(() => {\r\n        props.removeMessage()\r\n      }, 2000);\r\n    }, 3000);\r\n  },[])\r\n\r\n  return(\r\n    <div className={\"ui \"+ message.type + \" message \" + (fadeout === true ? 'fadeout' : '')}>\r\n      <i className=\"close icon\" onClick={e => props.removeMessage()}></i>\r\n      <div className=\"header\">\r\n        {message.title}\r\n      </div>\r\n      <p>{message.msg}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DBTableRender;","C:\\Work\\projects\\charlee\\src\\app\\admin\\ItemForm.js",["102","103","104","105","106","107","108"],"C:\\Work\\projects\\charlee\\src\\app\\admin\\textEditor.js",["109","110","111"],"C:\\Work\\projects\\charlee\\src\\app\\partials\\signin.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"114","replacedBy":"117"},{"ruleId":"112","replacedBy":"118"},{"ruleId":"114","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":9,"column":11,"nodeType":"122","messageId":"123","endLine":9,"endColumn":26},{"ruleId":"124","severity":1,"message":"125","line":86,"column":13,"nodeType":"126","endLine":86,"endColumn":74},{"ruleId":"112","replacedBy":"127"},{"ruleId":"114","replacedBy":"128"},{"ruleId":"120","severity":1,"message":"129","line":1,"column":38,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"130","line":1,"column":48,"nodeType":"122","messageId":"123","endLine":1,"endColumn":52},{"ruleId":"131","severity":1,"message":"132","line":47,"column":66,"nodeType":"133","messageId":"134","endLine":47,"endColumn":68},{"ruleId":"124","severity":1,"message":"125","line":215,"column":18,"nodeType":"126","endLine":215,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":280,"column":26,"nodeType":"137","messageId":"138","endLine":280,"endColumn":27,"suggestions":"139"},{"ruleId":"135","severity":1,"message":"136","line":280,"column":51,"nodeType":"137","messageId":"138","endLine":280,"endColumn":52,"suggestions":"140"},{"ruleId":"112","replacedBy":"141"},{"ruleId":"114","replacedBy":"142"},{"ruleId":"120","severity":1,"message":"143","line":10,"column":20,"nodeType":"122","messageId":"123","endLine":10,"endColumn":31},{"ruleId":"131","severity":1,"message":"132","line":49,"column":50,"nodeType":"133","messageId":"134","endLine":49,"endColumn":52},{"ruleId":"120","severity":1,"message":"144","line":15,"column":11,"nodeType":"122","messageId":"123","endLine":15,"endColumn":13},{"ruleId":"145","severity":1,"message":"146","line":19,"column":7,"nodeType":"147","endLine":19,"endColumn":13,"suggestions":"148"},{"ruleId":"120","severity":1,"message":"129","line":1,"column":38,"nodeType":"122","messageId":"123","endLine":1,"endColumn":46},{"ruleId":"120","severity":1,"message":"130","line":1,"column":48,"nodeType":"122","messageId":"123","endLine":1,"endColumn":52},{"ruleId":"145","severity":1,"message":"149","line":17,"column":7,"nodeType":"147","endLine":17,"endColumn":9,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"151","line":21,"column":7,"nodeType":"147","endLine":21,"endColumn":19,"suggestions":"152"},{"ruleId":"145","severity":1,"message":"153","line":127,"column":7,"nodeType":"147","endLine":127,"endColumn":9,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":135,"column":7,"nodeType":"147","endLine":135,"endColumn":23,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"155","line":139,"column":7,"nodeType":"147","endLine":139,"endColumn":40,"suggestions":"157"},{"ruleId":"120","severity":1,"message":"158","line":148,"column":11,"nodeType":"122","messageId":"123","endLine":148,"endColumn":15},{"ruleId":"124","severity":1,"message":"125","line":213,"column":13,"nodeType":"126","endLine":213,"endColumn":111},{"ruleId":"145","severity":1,"message":"159","line":21,"column":7,"nodeType":"147","endLine":21,"endColumn":9,"suggestions":"160"},{"ruleId":"120","severity":1,"message":"161","line":126,"column":11,"nodeType":"122","messageId":"123","endLine":126,"endColumn":30},{"ruleId":"131","severity":1,"message":"132","line":128,"column":56,"nodeType":"133","messageId":"134","endLine":128,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":146,"column":38,"nodeType":"133","messageId":"134","endLine":146,"endColumn":40},{"ruleId":"124","severity":1,"message":"125","line":152,"column":21,"nodeType":"126","endLine":152,"endColumn":57},{"ruleId":"162","severity":1,"message":"163","line":187,"column":13,"nodeType":"126","endLine":187,"endColumn":98},{"ruleId":"162","severity":1,"message":"163","line":210,"column":19,"nodeType":"126","endLine":210,"endColumn":148},{"ruleId":"145","severity":1,"message":"164","line":350,"column":5,"nodeType":"147","endLine":350,"endColumn":7,"suggestions":"165"},{"ruleId":"131","severity":1,"message":"132","line":79,"column":66,"nodeType":"133","messageId":"134","endLine":79,"endColumn":68},{"ruleId":"120","severity":1,"message":"166","line":135,"column":11,"nodeType":"122","messageId":"123","endLine":135,"endColumn":17},{"ruleId":"120","severity":1,"message":"167","line":137,"column":8,"nodeType":"122","messageId":"123","endLine":137,"endColumn":14},{"ruleId":"145","severity":1,"message":"168","line":146,"column":7,"nodeType":"147","endLine":146,"endColumn":29,"suggestions":"169"},{"ruleId":"145","severity":1,"message":"170","line":158,"column":7,"nodeType":"147","endLine":158,"endColumn":13,"suggestions":"171"},{"ruleId":"145","severity":1,"message":"164","line":162,"column":7,"nodeType":"147","endLine":162,"endColumn":14,"suggestions":"172"},{"ruleId":"124","severity":1,"message":"125","line":244,"column":17,"nodeType":"126","endLine":244,"endColumn":116},{"ruleId":"120","severity":1,"message":"173","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"174","line":7,"column":18,"nodeType":"122","messageId":"123","endLine":7,"endColumn":25},{"ruleId":"175","severity":1,"message":"176","line":11,"column":17,"nodeType":"126","endLine":11,"endColumn":21},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],["177"],["178"],["177"],["178"],"no-unused-vars","'currentImgIndex' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["177"],["178"],"'Suspense' is defined but never used.","'lazy' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["179","180"],["181","182"],["177"],["178"],"'setDbTables' is assigned a value but never used.","'el' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadFile'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has missing dependencies: 'getPictures' and 'onWindowResize'. Either include them or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'pictures'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'onMobileScroll' and 'onWindowResize'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'updateImgDimensions'. Either include it or remove the dependency array.",["187"],["188"],"'left' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["189"],"'excludedColumnsList' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["190"],"'editor' is assigned a value but never used.","'config' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data' and 'validateField'. Either include them or remove the dependency array.",["191"],"React Hook useEffect has missing dependencies: 'initData', 'props', and 'validateField'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["192"],["193"],"'Component' is defined but never used.","'setText' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","no-global-assign","no-unsafe-negation",{"messageId":"194","fix":"195","desc":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"194","fix":"200","desc":"196"},{"messageId":"197","fix":"201","desc":"199"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"removeEscape",{"range":"224","text":"225"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"226","text":"227"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"228","text":"225"},{"range":"229","text":"227"},"Update the dependencies array to be: [file, uploadFile]",{"range":"230","text":"231"},"Update the dependencies array to be: [getPictures, onWindowResize]",{"range":"232","text":"233"},"Update the dependencies array to be: [pictures, windowSize]",{"range":"234","text":"235"},"Update the dependencies array to be: [onMobileScroll, onWindowResize]",{"range":"236","text":"237"},"Update the dependencies array to be: [containerWidth, updateImgDimensions]",{"range":"238","text":"239"},"Update the dependencies array to be: [loadedImgHeight, loadedImgWidth, updateImgDimensions]",{"range":"240","text":"241"},"Update the dependencies array to be: [getItems]",{"range":"242","text":"243"},"Update the dependencies array to be: [props]",{"range":"244","text":"245"},"Update the dependencies array to be: [data, props.showChildError, validateField]",{"range":"246","text":"247"},"Update the dependencies array to be: [data, initData, props, validateField]",{"range":"248","text":"249"},"Update the dependencies array to be: [error, props]",{"range":"250","text":"251"},[6370,6371],"",[6370,6370],"\\",[6395,6396],[6395,6395],[762,768],"[file, uploadFile]",[666,668],"[getPictures, onWindowResize]",[734,746],"[pictures, windowSize]",[3903,3905],"[onMobileScroll, onWindowResize]",[4041,4057],"[containerWidth, updateImgDimensions]",[4178,4211],"[loadedImgHeight, loadedImgWidth, updateImgDimensions]",[783,785],"[getItems]",[10617,10619],"[props]",[4612,4634],"[data, props.showChildError, validateField]",[4938,4944],"[data, initData, props, validateField]",[5015,5022],"[error, props]"]