[{"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js":"1","C:\\Work\\projects\\charlee\\src\\App.js":"2","C:\\Work\\projects\\charlee\\src\\Gallery.js":"3","C:\\Work\\projects\\charlee\\src\\index.js":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":5402,"mtime":1608039134841,"results":"7","hashOfConfig":"6"},{"size":2976,"mtime":1608038768920,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11grl55",{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js",[],"C:\\Work\\projects\\charlee\\src\\App.js",["20","21","22"],"C:\\Work\\projects\\charlee\\src\\Gallery.js",["23","24","25","26","27"],"import React, { useEffect, useState } from 'react';\r\nimport './Gallery.css';\r\n\r\nfunction GallerySection(props) {\r\n\r\n  const [pictures, setPictures] = useState([])\r\n\r\n    const [ showSlider, setShowSlider ] = useState(false)\r\n    const [ currentImgIndex, setCurrentImgIndex ] = useState(0)\r\n  \r\n    console.log(currentImgIndex)\r\n\r\n    useEffect(() => {\r\n      getPictures()\r\n    },[])\r\n\r\n    function getPictures() {\r\n      fetch('/pictures')\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        //console.log(JSON.parse(res));\r\n        setPictures(JSON.parse(res));\r\n      })\r\n    }\r\n  \r\n    function onGalleryImgClick(img, index){\r\n      setShowSlider(true)\r\n      setCurrentImgIndex(index)\r\n    }\r\n  \r\n    const galleryDisplay = pictures.map((picture, index) => (\r\n      <GalleryImage\r\n          picture={picture}\r\n          index={index}\r\n          onGalleryImgClick={onGalleryImgClick}\r\n          >\r\n      </GalleryImage>\r\n    ))\r\n  \r\n    function onOverlayClick() {\r\n      setShowSlider(false)\r\n    }\r\n      \r\n    let overlayDisplay;\r\n    if(showSlider === true){\r\n      overlayDisplay = (\r\n        <SlideShow\r\n          onOverlayClick={onOverlayClick}\r\n          pictures={pictures}\r\n          currentImgIndex={currentImgIndex}\r\n          setCurrentImgIndex={setCurrentImgIndex}\r\n        />\r\n      )\r\n    }\r\n  \r\n    return(\r\n      <section id=\"gallery\">\r\n        <div id=\"gallery-pictures\">{galleryDisplay}</div>\r\n        {overlayDisplay}\r\n      </section>\r\n    )\r\n  }\r\n\r\n  function GalleryImage(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setIsVisible(true)            \r\n        }, ( props.index ) * 5);\r\n    },[])\r\n\r\n    let cssClass = \"gallery-img-item\";\r\n    \r\n    if (isVisible === true) cssClass += \"  is-visible\";\r\n\r\n    return(\r\n        <div className={cssClass}>\r\n          <div className=\"image-container\">\r\n             <img onClick={() => props.onGalleryImgClick(props.picture, props.index)} src={props.picture.filename}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  function SlideShow(props) {\r\n\r\n    const [nextIndex, setNextIndex] = useState(null)\r\n\r\n    function onNavButtonClick(value) {\r\n      let indexValue = value;\r\n      if(value < 0) indexValue = props.pictures.length -1;\r\n      else if(value === props.pictures.length) indexValue = 0; \r\n      setNextIndex(indexValue)\r\n      props.setCurrentImgIndex(indexValue)\r\n    }\r\n  \r\n    return(\r\n      <div id=\"overlay\">\r\n        <div id=\"overlay-black\" onClick={props.onOverlayClick}></div>\r\n         <div id=\"slideshow\">\r\n           <div className=\"nav-button left\" onClick={() => onNavButtonClick(props.currentImgIndex -1)}></div>\r\n            <img src={props.pictures[props.currentImgIndex].filename}/>\r\n            <div className=\"nav-button right\" onClick={() => onNavButtonClick(props.currentImgIndex +1)}></div>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default GallerySection;","C:\\Work\\projects\\charlee\\src\\index.js",[],["28","29"],{"ruleId":"30","severity":1,"message":"31","line":92,"column":48,"nodeType":"32","endLine":92,"endColumn":85},{"ruleId":"33","severity":1,"message":"34","line":150,"column":26,"nodeType":"35","messageId":"36","endLine":150,"endColumn":27,"suggestions":"37"},{"ruleId":"33","severity":1,"message":"34","line":150,"column":51,"nodeType":"35","messageId":"36","endLine":150,"endColumn":52,"suggestions":"38"},{"ruleId":"39","severity":1,"message":"40","line":72,"column":7,"nodeType":"41","endLine":72,"endColumn":9,"suggestions":"42"},{"ruleId":"30","severity":1,"message":"31","line":81,"column":14,"nodeType":"32","endLine":81,"endColumn":117},{"ruleId":"43","severity":1,"message":"44","line":101,"column":7,"nodeType":"45","messageId":"46","endLine":101,"endColumn":23},{"ruleId":"30","severity":1,"message":"31","line":101,"column":25,"nodeType":"32","endLine":101,"endColumn":72},{"ruleId":"30","severity":1,"message":"31","line":109,"column":13,"nodeType":"32","endLine":109,"endColumn":72},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["51","52"],["53","54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.index'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-unused-vars","'nextImageDisplay' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["56"],"no-negated-in-lhs",["57"],{"messageId":"58","fix":"59","desc":"60"},{"messageId":"61","fix":"62","desc":"63"},{"messageId":"58","fix":"64","desc":"60"},{"messageId":"61","fix":"65","desc":"63"},{"desc":"66","fix":"67"},"no-global-assign","no-unsafe-negation","removeEscape",{"range":"68","text":"69"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"70","text":"71"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"72","text":"69"},{"range":"73","text":"71"},"Update the dependencies array to be: [props.index]",{"range":"74","text":"75"},[3485,3486],"",[3485,3485],"\\",[3510,3511],[3510,3510],[1715,1717],"[props.index]"]