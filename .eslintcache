[{"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js":"1","C:\\Work\\projects\\charlee\\src\\index.js":"2","C:\\Work\\projects\\charlee\\src\\app\\helpers.js":"3","C:\\Work\\projects\\charlee\\src\\app\\gallery\\Gallery.js":"4","C:\\Work\\projects\\charlee\\src\\app\\App.js":"5","C:\\Work\\projects\\charlee\\src\\app\\admin\\Admin.js":"6","C:\\Work\\projects\\charlee\\src\\app\\partials\\loader.js":"7","C:\\Work\\projects\\charlee\\src\\app\\partials\\file-uploader.js":"8","C:\\Work\\projects\\charlee\\src\\app\\gallery\\SubGallery.js":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":597,"mtime":1608410987279,"results":"12","hashOfConfig":"11"},{"size":397,"mtime":1608410950531,"results":"13","hashOfConfig":"11"},{"size":3537,"mtime":1609540698614,"results":"14","hashOfConfig":"11"},{"size":7257,"mtime":1609542639156,"results":"15","hashOfConfig":"11"},{"size":13075,"mtime":1609366602326,"results":"16","hashOfConfig":"11"},{"size":241,"mtime":1608413035776,"results":"17","hashOfConfig":"11"},{"size":1976,"mtime":1609426412437,"results":"18","hashOfConfig":"11"},{"size":6899,"mtime":1609540425564,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"11grl55",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js",[],["42","43"],"C:\\Work\\projects\\charlee\\src\\index.js",[],["44","45"],"C:\\Work\\projects\\charlee\\src\\app\\helpers.js",[],"C:\\Work\\projects\\charlee\\src\\app\\gallery\\Gallery.js",["46","47","48","49"],"import React, { useEffect, useState } from 'react';\r\nimport './Gallery.css';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\n\r\nfunction GallerySection(props) {\r\n\r\n  const [pictures, setPictures] = useState([])\r\n\r\n    const [ showSlider, setShowSlider ] = useState(false)\r\n    const [ currentImgIndex, setCurrentImgIndex ] = useState(0)\r\n    const [ isBlurred, setIsBlurred ] = useState(false); \r\n  \r\n    useEffect(() => {\r\n      getPictures()\r\n    },[])\r\n\r\n    function getPictures() {\r\n      fetch('/pictures')\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        setPictures(JSON.parse(res));\r\n      })\r\n    }\r\n  \r\n    function onGalleryImgClick(img, index){\r\n      setShowSlider(true)\r\n      setCurrentImgIndex(index)\r\n    }\r\n  \r\n    const galleryDisplay = pictures.map((picture, index) => (\r\n      <GalleryImage\r\n          picture={picture}\r\n          index={index}\r\n          onGalleryImgClick={onGalleryImgClick}\r\n          >\r\n      </GalleryImage>\r\n    ))\r\n  \r\n    function onOverlayClick() {\r\n      setShowSlider(false)\r\n    }\r\n      \r\n    let overlayDisplay;\r\n    if(showSlider === true){\r\n      overlayDisplay = (\r\n        <SlideShow\r\n          onOverlayClick={onOverlayClick}\r\n          pictures={pictures}\r\n          currentImgIndex={currentImgIndex}\r\n          setCurrentImgIndex={setCurrentImgIndex}\r\n        />\r\n      )\r\n    }\r\n\r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n\r\n    const callbacks = {\r\n      onSlideChange: object => console.log(object),\r\n      onLightboxOpened: object => setIsBlurred(true),\r\n      onLightboxClosed: object => setIsBlurred(false),\r\n      onCountSlides: object => console.log(object)\r\n  };\r\n  \r\n    let galleryStyle;\r\n    if (isBlurred){\r\n      galleryStyle = {\r\n        filter:\"blur(5px)\"\r\n      }\r\n    }\r\n\r\n    return(\r\n      <section id=\"gallery\"> \r\n        <SRLWrapper \r\n          callbacks={callbacks}\r\n          options={options}>\r\n            <div id=\"gallery-pictures\" style={galleryStyle}>{galleryDisplay}</div>\r\n        </SRLWrapper>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  function GalleryImage(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    function onGalleryImgLoad() {\r\n      setIsVisible(true)            \r\n    }\r\n\r\n    let cssClass = \"gallery-img-item\";\r\n    \r\n    if (isVisible === true) cssClass += \"  is-visible\";\r\n\r\n    return(\r\n        <div className={cssClass}>\r\n          <div className=\"image-container\">\r\n            <img onLoad={onGalleryImgLoad} src={props.picture.filename}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  function SlideShow(props) {\r\n\r\n    const [nextIndex, setNextIndex] = useState(null)\r\n\r\n    function onNavButtonClick(value) {\r\n      let indexValue = value;\r\n      if(value < 0) indexValue = props.pictures.length -1;\r\n      else if(value === props.pictures.length) indexValue = 0; \r\n      setNextIndex(indexValue)\r\n      props.setCurrentImgIndex(indexValue)\r\n    }\r\n  \r\n    return(\r\n      <div id=\"overlay\">\r\n        <div id=\"overlay-black\" onClick={props.onOverlayClick}></div>\r\n         <div id=\"slideshow\">\r\n           <div className=\"nav-button left\" onClick={() => onNavButtonClick(props.currentImgIndex -1)}></div>\r\n            <img src={props.pictures[props.currentImgIndex].filename}/>\r\n            <div className=\"nav-button right\" onClick={() => onNavButtonClick(props.currentImgIndex +1)}></div>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  export default GallerySection;","C:\\Work\\projects\\charlee\\src\\app\\App.js",["50","51","52","53","54","55","56","57","58"],"C:\\Work\\projects\\charlee\\src\\app\\admin\\Admin.js",["59","60","61","62","63","64","65","66","67","68","69"],"C:\\Work\\projects\\charlee\\src\\app\\partials\\loader.js",[],"C:\\Work\\projects\\charlee\\src\\app\\partials\\file-uploader.js",[],"C:\\Work\\projects\\charlee\\src\\app\\gallery\\SubGallery.js",["70","71","72","73","74","75","76","77"],"import React, { useEffect, useState, Suspense, lazy } from 'react';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nimport {breakArrayIntoChunksHelper} from '../helpers';\r\nimport './SubGallery.css';\r\n\r\nfunction SubGallery(props) {\r\n \r\n    const [pictures, setPictures] = useState([])\r\n    const [chunksArray, setChunksArray ] = useState([])\r\n    const [windowSize, setWindowSize] = useState(window.innerWidth > 577 ? 'normal' :  'small')\r\n    const [ isBlurred, setIsBlurred ] = useState(false); \r\n  \r\n    useEffect(() => {\r\n      getPictures()\r\n      window.addEventListener('resize', onWindowResize)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      console.log(windowSize)\r\n      handelPictures(pictures)\r\n    },[windowSize])\r\n\r\n    function onWindowResize() {\r\n      let currentWindowSize = window.innerWidth > 577 ? 'normal' :  'small';\r\n      if (currentWindowSize !== windowSize) {\r\n        setWindowSize(currentWindowSize)\r\n      }\r\n    }\r\n  \r\n    function getPictures() {\r\n      fetch('/pictures/' + props.pictureType)\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        handelPictures(JSON.parse(res))\r\n        setPictures(JSON.parse(res))\r\n      })\r\n    }\r\n\r\n    function handelPictures(pics) {\r\n      let numChunks = 2;\r\n      if (window.innerWidth < 577) numChunks = 1;\r\n      const newPictures = breakArrayIntoChunksHelper(numChunks,pics)\r\n      setChunksArray(newPictures);\r\n    }\r\n  \r\n    const galleryDisplay = chunksArray.map((subArray, subIndex) => (\r\n        <SubGalleryRow key={subIndex} subArray={subArray}/>\r\n    ))\r\n  \r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n    \r\n    const callbacks = {\r\n      onSlideChange: object => console.log(object),\r\n      onLightboxOpened: object => setIsBlurred(true),\r\n      onLightboxClosed: object => setIsBlurred(false),\r\n      onCountSlides: object => console.log(object)\r\n  };\r\n  \r\n    let galleryStyle;\r\n    if (isBlurred){\r\n      galleryStyle = {\r\n        filter:\"blur(5px)\"\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className=\"sub-gallery\">\r\n          <SRLWrapper \r\n            callbacks={callbacks}\r\n            options={options}>\r\n              <div id=\"gallery-pictures\" style={galleryStyle}>{galleryDisplay}</div>\r\n          </SRLWrapper>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  function SubGalleryRow(props) {\r\n    \r\n    const [hovered, setHovered] = useState(null)\r\n\r\n    const SubGalleryPictureDisplay = props.subArray.map((picture, index) => (\r\n        <SubGalleryPicture \r\n            key={index} \r\n            picture={picture}\r\n            hovered={hovered}\r\n            setHovered={setHovered}\r\n        />\r\n    ))  \r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            {SubGalleryPictureDisplay}\r\n        </div>\r\n    )\r\n  }\r\n\r\n  function SubGalleryPicture(props) {\r\n\r\n    const picture = props.picture;\r\n    let initContainerWidth = (window.innerWidth*0.45) -30.81\r\n    if (window.innerWidth < 577) initContainerWidth = (window.innerWidth*0.9) -30.81\r\n    const [containerWidth, setContainerWidth] = useState(initContainerWidth)\r\n    const [loadedImgWidth,setLoadedImgWidth] = useState(null)\r\n    const [loadedImgHeight, setLoadedImgHeight] = useState(null)\r\n    const [imgWidth, setImgWidth] = useState(null)\r\n    const [imgHeight, setImgHeight] = useState(null)\r\n    const [imgTop, setImgTop] = useState(null)\r\n    const [imgLeft, setImgLeft] = useState(null)\r\n    const [isHoovered, setIsHoovered] = useState(false)\r\n    const [differential, setDifferential] = useState(null)\r\n    const [isResized, setIsResized] = useState(false)\r\n\r\n    let resizeTimeout;\r\n\r\n    useEffect(() => {\r\n      window.addEventListener('resize', onWindowResize);\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      updateImgDimensions();\r\n    },[containerWidth])\r\n\r\n    useEffect(() => {\r\n      if (loadedImgHeight !== null && loadedImgWidth !== null) updateImgDimensions();\r\n    },[loadedImgHeight, loadedImgWidth])\r\n  \r\n    function onWindowResize(){\r\n      setIsResized(true)\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(resizedw, 500);\r\n      let initContainerWidth = (window.innerWidth*0.45) -30.81\r\n      if (window.innerWidth < 577) initContainerWidth = (window.innerWidth*0.9) -30.81\r\n      setContainerWidth(initContainerWidth)\r\n    }\r\n\r\n    function resizedw(){\r\n      setIsResized(false)\r\n      console.log(\"Haven't resized in 500ms!\");\r\n    }\r\n\r\n    function onImgLoad(e) {\r\n      setLoadedImgHeight(e.target.naturalHeight)\r\n      setLoadedImgWidth(e.target.naturalWidth)\r\n    }\r\n\r\n    function updateImgDimensions() {\r\n      \r\n      let diff, adjImgTop, adjImgLeft;\r\n      if (loadedImgWidth > loadedImgHeight) {\r\n        diff = loadedImgHeight / containerWidth\r\n        adjImgLeft = ((loadedImgWidth /diff) - containerWidth) / 2\r\n      }\r\n      else {\r\n        diff = loadedImgWidth / containerWidth\r\n        adjImgTop = ((loadedImgHeight /diff) - containerWidth) / 2\r\n      }\r\n\r\n      setImgHeight(loadedImgHeight / diff)\r\n      setImgWidth(loadedImgWidth /diff) \r\n      setImgLeft(adjImgLeft)\r\n      setImgTop(adjImgTop)\r\n      setDifferential(diff)\r\n    }\r\n\r\n    let imgStyle = {}, imgClassName = '';\r\n    if (imgHeight !== null) {\r\n      let currentWidth = imgWidth, currentHeight = imgHeight, currentTop = imgTop, currentLeft = imgLeft;\r\n      if (isHoovered === true) {\r\n        currentWidth = loadedImgWidth /(differential * 0.9);\r\n        currentHeight = loadedImgHeight /(differential * 0.9);\r\n        if (currentWidth > currentHeight) currentLeft = ((loadedImgWidth /(differential * 0.9)) - containerWidth) / 2;\r\n        else currentTop = ((loadedImgHeight /(differential * 0.9)) - containerWidth) / 2;\r\n      }\r\n      imgStyle = {\r\n        width:currentWidth,\r\n        height:currentHeight,\r\n        left:'-' + currentLeft + 'px',\r\n        top:'-' + currentTop + 'px'\r\n      }\r\n      imgClassName = isResized === false ? 'loaded' : ''\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"box\">\r\n          <div className=\"inner-box\" onMouseEnter={()=> setIsHoovered(true)} onMouseLeave={()=> setIsHoovered(false)}>\r\n            <img style={imgStyle} className={imgClassName} src={picture.filename} onLoad={e => onImgLoad(e)}/>\r\n            <div className=\"info-container\">\r\n                <div className=\"left-container\">\r\n                    <h2>\r\n                        {picture.caption}\r\n                    </h2>\r\n                    <p>\r\n                        {picture.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                <span>\r\n                    {picture.price.split(\"kr\")[0]}\r\n                    <span style={{marginLeft:\"3px\"}}>kr</span>\r\n                </span>\r\n                </div>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  export default SubGallery;",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":46,"column":7,"nodeType":"86","messageId":"87","endLine":46,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":105,"column":13,"nodeType":"90","endLine":105,"endColumn":74},{"ruleId":"84","severity":1,"message":"91","line":113,"column":12,"nodeType":"86","messageId":"87","endLine":113,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":128,"column":13,"nodeType":"90","endLine":128,"endColumn":72},{"ruleId":"84","severity":1,"message":"92","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"84","severity":1,"message":"93","line":1,"column":48,"nodeType":"86","messageId":"87","endLine":1,"endColumn":52},{"ruleId":"84","severity":1,"message":"94","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":20},{"ruleId":"84","severity":1,"message":"95","line":7,"column":9,"nodeType":"86","messageId":"87","endLine":7,"endColumn":35},{"ruleId":"84","severity":1,"message":"96","line":8,"column":23,"nodeType":"86","messageId":"87","endLine":8,"endColumn":29},{"ruleId":"84","severity":1,"message":"97","line":47,"column":11,"nodeType":"86","messageId":"87","endLine":47,"endColumn":23},{"ruleId":"88","severity":1,"message":"89","line":161,"column":48,"nodeType":"90","endLine":161,"endColumn":85},{"ruleId":"98","severity":1,"message":"99","line":219,"column":26,"nodeType":"100","messageId":"101","endLine":219,"endColumn":27,"suggestions":"102"},{"ruleId":"98","severity":1,"message":"99","line":219,"column":51,"nodeType":"100","messageId":"101","endLine":219,"endColumn":52,"suggestions":"103"},{"ruleId":"84","severity":1,"message":"104","line":11,"column":20,"nodeType":"86","messageId":"87","endLine":11,"endColumn":31},{"ruleId":"105","severity":1,"message":"106","line":19,"column":7,"nodeType":"90","endLine":19,"endColumn":81},{"ruleId":"107","severity":1,"message":"108","line":25,"column":50,"nodeType":"109","messageId":"110","endLine":25,"endColumn":52},{"ruleId":"105","severity":1,"message":"106","line":41,"column":11,"nodeType":"90","endLine":41,"endColumn":95},{"ruleId":"111","severity":1,"message":"112","line":60,"column":7,"nodeType":"113","endLine":60,"endColumn":9,"suggestions":"114"},{"ruleId":"88","severity":1,"message":"89","line":122,"column":19,"nodeType":"90","endLine":122,"endColumn":71},{"ruleId":"105","severity":1,"message":"106","line":147,"column":11,"nodeType":"90","endLine":147,"endColumn":81},{"ruleId":"84","severity":1,"message":"115","line":270,"column":17,"nodeType":"86","messageId":"87","endLine":270,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":303,"column":64,"nodeType":"109","messageId":"110","endLine":303,"endColumn":66},{"ruleId":"111","severity":1,"message":"116","line":352,"column":5,"nodeType":"113","endLine":352,"endColumn":11,"suggestions":"117"},{"ruleId":"88","severity":1,"message":"89","line":424,"column":57,"nodeType":"90","endLine":424,"endColumn":88},{"ruleId":"84","severity":1,"message":"92","line":1,"column":38,"nodeType":"86","messageId":"87","endLine":1,"endColumn":46},{"ruleId":"84","severity":1,"message":"93","line":1,"column":48,"nodeType":"86","messageId":"87","endLine":1,"endColumn":52},{"ruleId":"111","severity":1,"message":"118","line":16,"column":7,"nodeType":"113","endLine":16,"endColumn":9,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"120","line":21,"column":7,"nodeType":"113","endLine":21,"endColumn":19,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":125,"column":7,"nodeType":"113","endLine":125,"endColumn":9,"suggestions":"123"},{"ruleId":"111","severity":1,"message":"124","line":129,"column":7,"nodeType":"113","endLine":129,"endColumn":23,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"124","line":133,"column":7,"nodeType":"113","endLine":133,"endColumn":40,"suggestions":"126"},{"ruleId":"88","severity":1,"message":"89","line":195,"column":13,"nodeType":"90","endLine":195,"endColumn":111},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],["127"],["128"],"no-unused-vars","'overlayDisplay' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'nextIndex' is assigned a value but never used.","'Suspense' is defined but never used.","'lazy' is defined but never used.","'SRLWrapper' is defined but never used.","'breakArrayIntoChunksHelper' is defined but never used.","'Switch' is defined but never used.","'showdropMenu' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["129","130"],["131","132"],"'setDbTables' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'newErrors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initData', 'props', and 'validateField'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["134"],"React Hook useEffect has missing dependencies: 'getPictures' and 'onWindowResize'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'pictures'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'onWindowResize'. Either include it or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'updateImgDimensions'. Either include it or remove the dependency array.",["138"],["139"],"no-global-assign","no-unsafe-negation",{"messageId":"140","fix":"141","desc":"142"},{"messageId":"143","fix":"144","desc":"145"},{"messageId":"140","fix":"146","desc":"142"},{"messageId":"143","fix":"147","desc":"145"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"removeEscape",{"range":"162","text":"163"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"164","text":"165"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"166","text":"163"},{"range":"167","text":"165"},"Update the dependencies array to be: [getItems]",{"range":"168","text":"169"},"Update the dependencies array to be: [data, initData, props, validateField]",{"range":"170","text":"171"},"Update the dependencies array to be: [getPictures, onWindowResize]",{"range":"172","text":"173"},"Update the dependencies array to be: [pictures, windowSize]",{"range":"174","text":"175"},"Update the dependencies array to be: [onWindowResize]",{"range":"176","text":"177"},"Update the dependencies array to be: [containerWidth, updateImgDimensions]",{"range":"178","text":"179"},"Update the dependencies array to be: [loadedImgHeight, loadedImgWidth, updateImgDimensions]",{"range":"180","text":"181"},[5369,5370],"",[5369,5369],"\\",[5394,5395],[5394,5394],[1781,1783],"[getItems]",[9360,9366],"[data, initData, props, validateField]",[615,617],"[getPictures, onWindowResize]",[714,726],"[pictures, windowSize]",[3753,3755],"[onWindowResize]",[3819,3835],"[containerWidth, updateImgDimensions]",[3956,3989],"[loadedImgHeight, loadedImgWidth, updateImgDimensions]"]