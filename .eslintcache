[{"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js":"1","C:\\Work\\projects\\charlee\\src\\App.js":"2","C:\\Work\\projects\\charlee\\src\\Gallery.js":"3","C:\\Work\\projects\\charlee\\src\\index.js":"4","C:\\Work\\projects\\charlee\\src\\helpers.js":"5","C:\\Work\\projects\\charlee\\src\\Admin.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":8584,"mtime":1608318307290,"results":"9","hashOfConfig":"8"},{"size":3129,"mtime":1608219423521,"results":"10","hashOfConfig":"8"},{"size":593,"mtime":1608216985501,"results":"11","hashOfConfig":"8"},{"size":397,"mtime":1608143567845,"results":"12","hashOfConfig":"8"},{"size":2354,"mtime":1608325845906,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11grl55",{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Work\\projects\\charlee\\src\\reportWebVitals.js",[],"C:\\Work\\projects\\charlee\\src\\App.js",["28","29","30","31","32","33"],"C:\\Work\\projects\\charlee\\src\\Gallery.js",["34","35","36","37"],"import React, { useEffect, useState } from 'react';\r\nimport './Gallery.css';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\n\r\nfunction GallerySection(props) {\r\n\r\n  const [pictures, setPictures] = useState([])\r\n\r\n    const [ showSlider, setShowSlider ] = useState(false)\r\n    const [ currentImgIndex, setCurrentImgIndex ] = useState(0)\r\n  \r\n    console.log(currentImgIndex)\r\n\r\n    useEffect(() => {\r\n      getPictures()\r\n    },[])\r\n\r\n    function getPictures() {\r\n      fetch('/pictures')\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        //console.log(JSON.parse(res));\r\n        setPictures(JSON.parse(res));\r\n      })\r\n    }\r\n  \r\n    function onGalleryImgClick(img, index){\r\n      setShowSlider(true)\r\n      setCurrentImgIndex(index)\r\n    }\r\n  \r\n    const galleryDisplay = pictures.map((picture, index) => (\r\n      <GalleryImage\r\n          picture={picture}\r\n          index={index}\r\n          onGalleryImgClick={onGalleryImgClick}\r\n          >\r\n      </GalleryImage>\r\n    ))\r\n  \r\n    function onOverlayClick() {\r\n      setShowSlider(false)\r\n    }\r\n      \r\n    let overlayDisplay;\r\n    if(showSlider === true){\r\n      overlayDisplay = (\r\n        <SlideShow\r\n          onOverlayClick={onOverlayClick}\r\n          pictures={pictures}\r\n          currentImgIndex={currentImgIndex}\r\n          setCurrentImgIndex={setCurrentImgIndex}\r\n        />\r\n      )\r\n    }\r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n    return(\r\n      <section id=\"gallery\"> \r\n        <SRLWrapper \r\n         options={options}>\r\n          <div id=\"gallery-pictures\">{galleryDisplay}</div>\r\n        </SRLWrapper>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  function GalleryImage(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    function onGalleryImgLoad() {\r\n      setIsVisible(true)            \r\n    }\r\n\r\n    let cssClass = \"gallery-img-item\";\r\n    \r\n    if (isVisible === true) cssClass += \"  is-visible\";\r\n\r\n    return(\r\n        <div className={cssClass}>\r\n          <div className=\"image-container\">\r\n            <img onLoad={onGalleryImgLoad} src={props.picture.filename}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n  \r\n  function SlideShow(props) {\r\n\r\n    const [nextIndex, setNextIndex] = useState(null)\r\n\r\n    function onNavButtonClick(value) {\r\n      let indexValue = value;\r\n      if(value < 0) indexValue = props.pictures.length -1;\r\n      else if(value === props.pictures.length) indexValue = 0; \r\n      setNextIndex(indexValue)\r\n      props.setCurrentImgIndex(indexValue)\r\n    }\r\n  \r\n    return(\r\n      <div id=\"overlay\">\r\n        <div id=\"overlay-black\" onClick={props.onOverlayClick}></div>\r\n         <div id=\"slideshow\">\r\n           <div className=\"nav-button left\" onClick={() => onNavButtonClick(props.currentImgIndex -1)}></div>\r\n            <img src={props.pictures[props.currentImgIndex].filename}/>\r\n            <div className=\"nav-button right\" onClick={() => onNavButtonClick(props.currentImgIndex +1)}></div>\r\n         </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  export default GallerySection;",["38","39"],"C:\\Work\\projects\\charlee\\src\\index.js",[],"C:\\Work\\projects\\charlee\\src\\helpers.js",[],"C:\\Work\\projects\\charlee\\src\\Admin.js",["40"],{"ruleId":"41","severity":1,"message":"42","line":8,"column":23,"nodeType":"43","messageId":"44","endLine":8,"endColumn":29},{"ruleId":"45","severity":1,"message":"46","line":149,"column":13,"nodeType":"47","endLine":149,"endColumn":43},{"ruleId":"45","severity":1,"message":"46","line":198,"column":11,"nodeType":"47","endLine":198,"endColumn":42},{"ruleId":"45","severity":1,"message":"46","line":234,"column":48,"nodeType":"47","endLine":234,"endColumn":85},{"ruleId":"48","severity":1,"message":"49","line":292,"column":26,"nodeType":"50","messageId":"51","endLine":292,"endColumn":27,"suggestions":"52"},{"ruleId":"48","severity":1,"message":"49","line":292,"column":51,"nodeType":"50","messageId":"51","endLine":292,"endColumn":52,"suggestions":"53"},{"ruleId":"41","severity":1,"message":"54","line":48,"column":7,"nodeType":"43","messageId":"44","endLine":48,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":90,"column":13,"nodeType":"47","endLine":90,"endColumn":74},{"ruleId":"41","severity":1,"message":"55","line":98,"column":12,"nodeType":"43","messageId":"44","endLine":98,"endColumn":21},{"ruleId":"45","severity":1,"message":"46","line":113,"column":13,"nodeType":"47","endLine":113,"endColumn":72},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":31,"column":7,"nodeType":"62","endLine":31,"endColumn":9,"suggestions":"63"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["64","65"],["66","67"],"'overlayDisplay' is assigned a value but never used.","'nextIndex' is assigned a value but never used.","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.","ArrayExpression",["70"],{"messageId":"71","fix":"72","desc":"73"},{"messageId":"74","fix":"75","desc":"76"},{"messageId":"71","fix":"77","desc":"73"},{"messageId":"74","fix":"78","desc":"76"},"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"removeEscape",{"range":"81","text":"82"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"83","text":"84"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"85","text":"82"},{"range":"86","text":"84"},"Update the dependencies array to be: [getItems]",{"range":"87","text":"88"},[6667,6668],"",[6667,6667],"\\",[6692,6693],[6692,6692],[963,965],"[getItems]"]