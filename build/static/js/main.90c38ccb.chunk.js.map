{"version":3,"sources":["app/gallery/Gallery.js","app/partials/file-uploader.js","app/admin/textEditor.js","app/helpers.js","app/admin/ItemForm.js","app/admin/DbTableRender.js","app/admin/Admin.js","app/gallery/SubGallery.js","app/partials/signin.js","app/App.js","reportWebVitals.js","index.js"],"names":["GalleryImage","props","useState","isVisible","setIsVisible","cssClass","className","onLoad","src","picture","filename","GallerySection","pictures","setPictures","setCurrentImgIndex","isBlurred","setIsBlurred","onGalleryImgClick","img","index","useEffect","fetch","then","res","text","JSON","parse","galleryStyle","galleryDisplay","map","callbacks","onSlideChange","object","console","log","onLightboxOpened","onLightboxClosed","onCountSlides","filter","id","options","thumbnails","showThumbnails","buttons","showDownloadButton","style","FileUpload","file","setFile","initData","name","path","existingImg","data","getFile","progress","setProgress","imgMarginTop","setImgMarginTop","showImg","setShowImg","useRef","uploadFile","instructionContainerDisplay","formData","FormData","append","axios","post","onUploadProgress","ProgressEvent","Math","round","loaded","total","updateInput","catch","err","progressBarClassNames","onDrop","acceptedFiles","files","handleDropUploader","getRootProps","getInputProps","accept","alt","marginTop","opacity","e","parentDivHeight","document","getElementById","offsetHeight","imgHeight","target","clientHeight","onUploadedImgLoad","width","minWidth","TextEditor","initText","defaultValue","Fragment","editor","ClassicEditor","onReady","onChange","event","getData","onBlur","onFocus","renderDisplayName","word","table","translation","FormField","errorMessageDisplay","formFieldDisplay","setData","column","columnName","error","setError","value","validateField","newError","length","msg","match","showChildError","obj","onUpdateFormField","updateFormErrors","Message","negative","fileUploaderDisplay","profile_img","textAreaDisplay","rows","newImgMarginTop","onImgLoad","selected","type","placeholder","ItemForm","initFormData","selectedItem","setFormData","errors","setErrors","setShowChildError","newFormData","newErrors","errorIndex","findIndex","push","slice","onFormSubmit","ajaxUrl","fetchUrl","ajaxType","action","picture_id","$","ajax","url","done","onFinishFormSubmit","backButtonDisplay","formFieldsDisplay","columns","showFormField","indexOf","onClick","onBackButtonClick","split","picture_type","price","caption","description","TableRowUserMenu","readButtonDisplay","editButtonDisplay","React","open","setOpen","setSelectedItem","item","onReadButtonClick","read","Modal","basic","onClose","onOpen","size","trigger","Button","icon","color","Icon","Header","Content","Actions","inverted","deleteItem","AdminMessagesContainer","messagesDisplay","messages","message","AdminMsg","removeMessage","fadeout","setFadeout","setTimeout","title","DBTableRender","items","setItems","setColumns","showForm","setShowForm","loading","setLoading","sortBy","setSortBy","setMessages","getItems","newItems","columnArray","i","cArray","forEach","c","displayName","menuOnly","renderTableColumnsArray","window","scrollTo","top","behavior","beforeDeleteItem","deleteFile","msg_id","beforeGetItems","itemType","newMessages","tableDisplay","formDisplay","addButtonDisplay","loadingDisplay","columnsDisplay","scope","itemsDisplay","sort","a","b","cellDisplay","today","Date","getDate","parseInt","getMonth","getFullYear","Admin","dbTables","currentSection","setCurrentSection","msgCounter","setMsgCounter","count","navItemsDisplay","msgCounterDisplay","menuItemclassName","Label","floating","Menu","Item","as","contentDisplay","mainMenuItemclassNameName","compact","SubGalleryRow","hovered","setHovered","SubGalleryPictureDisplay","subArray","SubGalleryPicture","initContainerWidth","innerWidth","resizeTimeout","containerWidth","setContainerWidth","loadedImgWidth","setLoadedImgWidth","loadedImgHeight","setLoadedImgHeight","imgWidth","setImgWidth","setImgHeight","imgTop","setImgTop","imgLeft","setImgLeft","isHovered","setIsHovered","differential","setDifferential","isResized","setIsResized","inFrame","setInFrame","onMobileScroll","el","viewportOffset","getBoundingClientRect","newInFrame","left","innerHeight","onWindowResize","clearTimeout","resizedw","updateImgDimensions","diff","adjImgTop","adjImgLeft","addEventListener","isMobile","imgStyle","imgClassName","currentWidth","currentHeight","currentTop","currentLeft","height","onMouseEnter","onMouseLeave","naturalHeight","naturalWidth","marginLeft","SubGallery","chunksArray","setChunksArray","windowSize","setWindowSize","currentWindowSize","handelPictures","pics","numChunks","perChunk","newPictures","reduce","resultArray","chunkIndex","floor","pictureType","subIndex","UserSignin","email","setEmail","password","setPassword","method","dropMenuDisplay","showdropMenu","setShowDropMenu","navigation","menuItem","to","nav_link","display_name","menuDisplay","href","SectionsContainer","sectionsDisplay","section","sectionHtmlDisplay","exact","PaintingsSection","SculpturesSection","ContactSection","AboutSection","adminSectionDisplay","aboutData","setAboutData","imgDisplay","class","textDisplay","dangerouslySetInnerHTML","__html","about_text","nameErrorDisplay","emailErrorDisplay","setName","setMessage","isSubmitted","setIsSubmitted","onSubmit","preventDefault","letters","test","String","toLowerCase","location","onNameChange","onEmailChange","onMessageChange","App","setNavigation","headerDisplay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.90c38ccb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Gallery.css';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\n\r\nfunction GallerySection(props) {\r\n\r\n  const [pictures, setPictures] = useState([])\r\n  const [ currentImgIndex, setCurrentImgIndex ] = useState(0)\r\n  const [ isBlurred, setIsBlurred ] = useState(false); \r\n  \r\n    useEffect(() => {\r\n      getPictures()\r\n    },[])\r\n\r\n    function getPictures() {\r\n      fetch('/pictures')\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        setPictures(JSON.parse(res));\r\n      })\r\n    }\r\n  \r\n    function onGalleryImgClick(img, index){\r\n      setCurrentImgIndex(index)\r\n    }\r\n  \r\n    const galleryDisplay = pictures.map((picture, index) => (\r\n      <GalleryImage\r\n          picture={picture}\r\n          index={index}\r\n          onGalleryImgClick={onGalleryImgClick}\r\n          >\r\n      </GalleryImage>\r\n    ))\r\n  \r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n\r\n    const callbacks = {\r\n      onSlideChange: object => console.log(object),\r\n      onLightboxOpened: object => setIsBlurred(true),\r\n      onLightboxClosed: object => setIsBlurred(false),\r\n      onCountSlides: object => console.log(object)\r\n  };\r\n  \r\n    let galleryStyle;\r\n    if (isBlurred){\r\n      galleryStyle = {\r\n        filter:\"blur(5px)\"\r\n      }\r\n    }\r\n\r\n    return(\r\n      <section id=\"gallery\"> \r\n        <SRLWrapper \r\n          callbacks={callbacks}\r\n          options={options}>\r\n            <div id=\"gallery-pictures\" style={galleryStyle}>{galleryDisplay}</div>\r\n        </SRLWrapper>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  function GalleryImage(props) {\r\n\r\n    const [isVisible, setIsVisible] = useState(false)\r\n\r\n    function onGalleryImgLoad() {\r\n      setIsVisible(true)            \r\n    }\r\n\r\n    let cssClass = \"gallery-img-item\";\r\n    \r\n    if (isVisible === true) cssClass += \"  is-visible\";\r\n\r\n    return(\r\n        <div className={cssClass}>\r\n          <div className=\"image-container\">\r\n            <img onLoad={onGalleryImgLoad} src={props.picture.filename}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  export default GallerySection;","import React, { useEffect, useRef, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './file-uploader.css';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nfunction FileUpload(props) {\r\n    const [file, setFile] = useState(''); // storing the uploaded file    // storing the recived file from backend\r\n    let initData = { name: \"\", path: \"\" };\r\n    if (props.existingImg) initData.path = props.existingImg;\r\n    const [data, getFile] = useState(initData);\r\n    const [progress, setProgress] = useState(0); // progess bar\r\n    const [imgMarginTop, setImgMarginTop] = useState(0);\r\n    const [showImg, setShowImg] = useState(false);\r\n\r\n    const el = useRef(); // accesing input element\r\n\r\n    useEffect(()=> {\r\n        if (file !== '') uploadFile()\r\n    },[file])\r\n\r\n    function handleDropUploader(files) {\r\n        setProgress(0)\r\n        const file = files[0]\r\n        setFile(file)\r\n    }\r\n\r\n    function onUploadedImgLoad(e) {\r\n        const parentDivHeight = document.getElementById('inner-drop-zone').offsetHeight\r\n        const imgHeight = e.target.clientHeight\r\n        const newImgMarginTop = (parentDivHeight - imgHeight) / 2;\r\n        setImgMarginTop(newImgMarginTop)\r\n        setShowImg(true)\r\n    } \r\n\r\n    const uploadFile = () => {\r\n        const formData = new FormData();\r\n        formData.append('file', file); // appending file\r\n        axios.post('http://localhost:80/upload', formData, {\r\n            onUploadProgress: (ProgressEvent) => {\r\n                let progress = Math.round(\r\n                ProgressEvent.loaded / ProgressEvent.total * 100);\r\n                setProgress(progress);\r\n            }\r\n        }).then(res => {\r\n            getFile({ name: res.data.name,\r\n                     path: \"http://localhost:80\" + res.data.path\r\n                   })\r\n            props.updateInput(res.data.path)\r\n        }).catch(err => console.log(err))}\r\n        \r\n    let instructionContainerDisplay;\r\n    if (file === '' && !data.path) {\r\n        instructionContainerDisplay = (\r\n            <div className=\"instruction-container\">\r\n                <i className=\"plus big icon\"></i>\r\n                <hr/>\r\n                <span>Dra bild hit för att lägga till, eller klicka på plus ikonen</span>\r\n            </div> \r\n        )\r\n    }\r\n\r\n    let progressBarClassNames = 'ui progress progress-bar';\r\n    if (progress > 0 && progress < 100) progressBarClassNames = 'ui active progress progress-bar';\r\n    else if (progress === 100) progressBarClassNames += ' success';\r\n\r\n    return (\r\n        <div id=\"file-upload-container\">\r\n\r\n            <Dropzone onDrop={acceptedFiles => handleDropUploader(acceptedFiles)}>\r\n                {({getRootProps, getInputProps}) => (\r\n                    <div id=\"inner-drop-zone\" {...getRootProps()}>\r\n                        <input {...getInputProps()} accept='image/*'/>\r\n                        {instructionContainerDisplay}\r\n                        <div className=\"uploaded-img\">\r\n                            {data.path && \r\n                                <img src={data.path} \r\n                                alt={data.name} \r\n                                style={{marginTop:imgMarginTop + 'px', opacity:(showImg === true ? '1':'0')}} \r\n                                onLoad={e=>onUploadedImgLoad(e)}/>\r\n                            }\r\n                        </div>\r\n                    </div>                    \r\n                )}\r\n            </Dropzone>\r\n            <div className={progressBarClassNames} style={{ width: \"100%\" }}>\r\n                <div className=\"bar\" style={{ width: progress + '%', minWidth: \"0px\" }}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUpload;","import React, { Component, useState } from 'react';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\n\r\nfunction TextEditor(props) {\r\n    const initText = props.defaultValue !== null ? props.defaultValue : '<p></p>';\r\n    const [text, setText] = useState(initText)\r\n    \r\n        return (\r\n            <React.Fragment>\r\n                <h2></h2>\r\n                <CKEditor\r\n                    editor={ ClassicEditor }\r\n                    data={text}\r\n                    onReady={ editor => {\r\n                        // You can store the \"editor\" and use when it is needed.\r\n                        console.log( 'Editor is ready to use!', editor );\r\n                    } }\r\n                    onChange={ ( event, editor ) => {\r\n                        const data = editor.getData();\r\n                        props.updateInput(data)\r\n                    } }\r\n                    onBlur={ ( event, editor ) => {\r\n                        console.log( 'Blur.', editor );\r\n                    } }\r\n                    onFocus={ ( event, editor ) => {\r\n                        console.log( 'Focus.', editor );\r\n                    } }\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    \r\n}\r\n  \r\nexport default TextEditor;","export const breakArrayIntoChunksHelper = (perChunk, inputArray)=>{\r\n    var result = inputArray.reduce((resultArray, item, index) => { \r\n      const chunkIndex = Math.floor(index/perChunk)\r\n      if(!resultArray[chunkIndex]) {\r\n        resultArray[chunkIndex] = [] // start a new chunk\r\n      }\r\n      resultArray[chunkIndex].push(item)\r\n      return resultArray\r\n    }, [])\r\n    return result\r\n}\r\n\r\nexport const renderTableColumnsArray = (columns, table) => {\r\n  let cArray = []\r\n  columns.forEach(function(c, i){\r\n      if (c !== 'msg_id' && c !== 'picture_id') {\r\n        const obj = {\r\n          columnName: c,\r\n          displayName: renderDisplayName(c, table),\r\n          menuOnly: c === 'read' ? true : false,\r\n        }\r\n        cArray.push(obj)\r\n      }\r\n  })\r\n  return cArray\r\n}\r\n\r\nexport const renderDisplayName = (word, table) => {\r\n  let translation = word\r\n    if (word === 'filename') translation = 'Bild';\r\n    else if (word === 'picture_type') translation = 'Kategori';\r\n    else if (word === 'price') translation = 'Pris';\r\n    else if (word === 'caption') translation = 'Titel';\r\n    else if (word === 'description') translation = 'Beskrivning';\r\n    else if (word === 'msg') translation = 'Meddelande';\r\n    else if (word === 'name') translation = 'Namn';\r\n    else if (word === 'email') translation = 'Email';\r\n    else if (word === 'read') translation = 'Läst';\r\n    else if (word === 'messages') translation = 'Meddelanden';\r\n    else if (word === 'pictures') translation = 'Bilder';\r\n    else if (word === 'about') translation = 'Om mig'\r\n    else if (word === 'created_at') {\r\n      if (table === '/pictures') translation = 'Bild upplagd'\r\n      else translation = 'Datum'\r\n    }\r\n\r\n  return translation;\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport FileUploader from '../partials/file-uploader';\r\nimport $ from 'jquery';\r\nimport { Message } from 'semantic-ui-react';\r\nimport TextEditor from './textEditor';\r\nimport { renderDisplayName } from '../helpers';\r\n\r\nfunction ItemForm(props) {\r\n\r\n    let initFormData = props.selectedItem !== null ? props.selectedItem : {};\r\n    const [formData, setFormData] = useState(initFormData)\r\n    const [errors, setErrors] = useState([])\r\n    const [showChildError, setShowChildError] = useState(false)\r\n    \r\n    function onUpdateFormField(obj) {\r\n      const newFormData = {\r\n      ...formData, ...obj\r\n      }\r\n      setFormData(newFormData)\r\n    }\r\n  \r\n    function updateFormErrors(obj) {\r\n      let newErrors = errors;\r\n      const errorIndex = errors.findIndex(error => error.column === obj.column)\r\n      if (obj.msg) {\r\n        //if there is an error\r\n        if (errorIndex === -1) {\r\n          newErrors.push(obj)\r\n        }\r\n      } else {\r\n        //if there is no error\r\n        newErrors = [\r\n          ...errors.slice(0, errorIndex -1), \r\n          ...errors.slice(errorIndex +1, errors.length -1)\r\n        ]\r\n      }\r\n      setErrors(newErrors)\r\n    }\r\n  \r\n    function beforeFormSubmit() {\r\n      if (errors.length === 0) {\r\n        if (props.fetchUrl === '/pictures') {\r\n          if (formData.filename && formData.picture_type && formData.price && formData.caption && formData.description) {\r\n            setShowChildError(false)\r\n            onFormSubmit()\r\n          } else {\r\n            setShowChildError(true)\r\n          }\r\n        } else {\r\n          setShowChildError(false)\r\n          onFormSubmit()\r\n        }\r\n      } else {\r\n        setShowChildError(true)\r\n      }\r\n    }\r\n  \r\n    function onFormSubmit() {\r\n      let ajaxUrl = props.fetchUrl;\r\n      let ajaxType = 'POST';\r\n      let action = 'create'\r\n      if (props.selectedItem !== null) {\r\n        if (props.fetchUrl === '/pictures') ajaxUrl += '/' + formData.picture_id;\r\n        ajaxType = 'PUT'\r\n        action = 'update'\r\n      }\r\n  \r\n      $.ajax({\r\n        url:ajaxUrl,\r\n        type:ajaxType,\r\n        data: formData\r\n      }).done(function(res) {\r\n        let item = {picture_id:0}\r\n        if (props.fetchUrl === '/about') props.onFinishFormSubmit()\r\n        else props.onFinishFormSubmit(action, item, 'success')\r\n      })\r\n    }\r\n  \r\n    const formFieldsDisplay = props.columns.map ((column, index) => {\r\n      \r\n      let showFormField = true;\r\n      if (column.columnName === 'created_at' || column.columnName.indexOf('_id') > -1 ) showFormField = false;\r\n      if (showFormField === true) {\r\n        let defaultValue = null;\r\n        if (props.selectedItem !== null) defaultValue = props.selectedItem[column.columnName]\r\n        return(\r\n          <FormField \r\n            key={index}\r\n            column={column}\r\n            defaultValue={defaultValue}\r\n            onUpdateFormField={onUpdateFormField}\r\n            updateFormErrors={updateFormErrors}\r\n            showChildError={showChildError}\r\n            formData={formData}\r\n          />\r\n        )\r\n      }\r\n     \r\n    })\r\n  \r\n    let backButtonDisplay;\r\n    if (props.fetchUrl === '/pictures') {\r\n      backButtonDisplay = (\r\n        <button onClick={props.onBackButtonClick} className=\"ui icon button\">\r\n          <i className=\"left chevron icon\"></i>\r\n        </button>\r\n      )\r\n    }\r\n  \r\n  \r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"form-header\">\r\n          {backButtonDisplay}\r\n          <h1>{renderDisplayName(props.fetchUrl.split('/')[1])}</h1>\r\n        </div>\r\n          <div className={\"add-item-form \" + (showChildError === true ? \"missing-file\" : \"\")}>\r\n            <div className=\"ui form\">\r\n              {formFieldsDisplay}\r\n              <button className=\"ui button\" onClick={beforeFormSubmit}>\r\n                {props.selectedItem !== null ? \"Uppdatera\" : \"Lägg till Bild\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  \r\n  function FormField(props) {\r\n    \r\n    let initData = props.defaultValue !== null ? props.defaultValue : '';\r\n    const [ data, setData ] = useState(initData)\r\n    const [error, setError] = useState({column:props.column.columnName})\r\n    const [imgMarginTop, setImgMarginTop] = useState(0)\r\n    const editor = useRef(null)\r\n\t\r\n\tconst config = {\r\n\t\treadonly: false // all options from https://xdsoft.net/jodit/doc/\r\n\t}\r\n  \r\n    useEffect (()=>{\r\n      if (props.showChildError === true) {\r\n        const newError = validateField(data)\r\n        setError(newError)\r\n      }\r\n    },[props.showChildError])\r\n  \r\n    useEffect (()=>{\r\n      if (data !== initData) {\r\n        const newError = validateField(data)\r\n        setError(newError)\r\n        if (!newError.msg) {\r\n          let obj = {};\r\n          obj[props.column.columnName] = data;\r\n          props.onUpdateFormField(obj)\r\n        }\r\n      }\r\n    },[data])\r\n  \r\n    useEffect(()=>{\r\n      props.updateFormErrors(error)\r\n    },[error])\r\n\r\n    function onImgLoad(e) {\r\n      const parentDivHeight = document.getElementById('item-img').offsetHeight;\r\n      console.log(parentDivHeight);\r\n      const imgHeight = e.target.clientHeight\r\n      console.log(imgHeight);\r\n      const newImgMarginTop = (parentDivHeight - imgHeight) / 2;\r\n      console.log(newImgMarginTop)\r\n      setImgMarginTop(newImgMarginTop)\r\n  } \r\n  \r\n    function updateInput(value) {\r\n      setData(value)\r\n    }\r\n  \r\n    function validateField(value) {\r\n      let newError = {column:props.column.columnName};\r\n      if (props.column.columnName === 'caption') {\r\n        if (value.length < 3) {\r\n          newError.msg = 'Titel  får inte vara tom'\r\n        }\r\n      } else if (props.column.columnName === 'description') {\r\n        if (value.length < 3) {\r\n          newError.msg = 'Beskrivning får inte vara tom'\r\n        }\r\n      } else if (props.column.columnName === 'price') {\r\n        var numbers = /^[0-9]+$/;\r\n        if(!value.match(numbers)) {\r\n          newError.msg = 'Får inte innehålla bokstäver'\r\n        }\r\n      } else if (props.column.columnName === 'picture_type') {\r\n          if (value === '0') {\r\n            newError.msg = 'Välj kategori'\r\n          }\r\n      }\r\n      return newError;\r\n    }\r\n  \r\n    let errorMessageDisplay;\r\n    if (error.msg && error.column === props.column.columnName) {\r\n      errorMessageDisplay = (\r\n        <Message negative>\r\n          <p>\r\n            {error.msg}\r\n          </p>\r\n        </Message>\r\n      )\r\n    }\r\n    let formFieldDisplay;\r\n  \r\n    let fileUploaderDisplay = (\r\n      <div id=\"form-img-container\">\r\n          <div className=\"inner-img-container\">\r\n            <FileUploader updateInput={updateInput} existingImg={props.formData.profile_img}/>\r\n          </div>\r\n        </div>\r\n    )\r\n  \r\n    let textAreaDisplay = (\r\n      <React.Fragment>\r\n        <label>{props.column.columnName === 'description' ? 'Beskrivning' : 'Om mig'}</label>\r\n        <textarea onChange={e => updateInput(e.target.value)} rows=\"2\">\r\n          {data}\r\n        </textarea>\r\n      </React.Fragment>\r\n    )\r\n  \r\n    switch (props.column.columnName) {\r\n      case 'filename': \r\n        if (props.defaultValue === null) {\r\n          formFieldDisplay = (\r\n            <div id=\"form-img-container\">\r\n              <div className=\"inner-img-container\">\r\n                <FileUploader updateInput={updateInput}/>\r\n              </div>\r\n            </div>\r\n          )\r\n        } else {\r\n          formFieldDisplay = (\r\n            <div id=\"form-img-container\">\r\n              <div className=\"inner-img-container\" id=\"item-img\" >\r\n                <img src={props.defaultValue} style={{marginTop:imgMarginTop + 'px'}} onLoad={(e)=> onImgLoad(e)}/>\r\n              </div>\r\n            </div>\r\n          )\r\n        }\r\n      break;\r\n      case 'profile_img' :\r\n        formFieldDisplay = fileUploaderDisplay;\r\n      break;\r\n      case 'picture_type':\r\n        formFieldDisplay = (\r\n          <React.Fragment>\r\n            <label>Gallery</label>\r\n            <select onChange={e => updateInput(e.target.value)}>\r\n              <option value=\"0\">Gallery</option>\r\n              <option selected={props.defaultValue === \"paintings\" ? \"selected\" : \"\"} value=\"paintings\">Maleri</option>\r\n              <option selected={props.defaultValue === \"sculptures\" ? \"selected\" : \"\"} value=\"sculpture\">Mosaik</option>   \r\n            </select>\r\n          </React.Fragment>\r\n        )\r\n      break;\r\n      case 'description':\r\n        formFieldDisplay = textAreaDisplay\r\n      break;\r\n      case 'about_text':\r\n        formFieldDisplay = (\r\n            <TextEditor\r\n              updateInput={updateInput}\r\n              defaultValue={props.defaultValue}\r\n            />\r\n        )\r\n      break;\r\n      case 'price':\r\n        formFieldDisplay = (\r\n          <React.Fragment>\r\n            <label>Pris</label>\r\n            <div className=\"ui right labeled input\">\r\n              <input value={data} onChange={e => updateInput(e.target.value)} type=\"text\"/>\r\n              <div className=\"ui basic label\">\r\n                kr\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        )\r\n      break;\r\n      default:\r\n      formFieldDisplay = (\r\n        <React.Fragment>\r\n          <label>Titel</label>\r\n          <input value={data} onChange={e => updateInput(e.target.value)} placeholder={props.column.columnName} type=\"text\"/>\r\n        </React.Fragment>\r\n      )\r\n      break;\r\n    }\r\n  \r\n    return(\r\n      <div className=\"field\">\r\n        {formFieldDisplay}\r\n        {errorMessageDisplay}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  export default ItemForm;","import React, { useState, useEffect } from 'react';\r\nimport { SRLWrapper } from 'simple-react-lightbox';\r\nimport { Button, Header, Icon, Modal } from 'semantic-ui-react';\r\nimport ItemForm from './ItemForm';\r\nimport $ from 'jquery';\r\nimport { renderDisplayName, renderTableColumnsArray } from '../helpers';\r\n\r\nfunction DBTableRender(props) {\r\n\r\n    const [items, setItems] = useState([])\r\n    const [columns, setColumns] = useState([])\r\n    const [showForm, setShowForm] = useState(false)\r\n    const [loading, setLoading] = useState(true)\r\n    const [selectedItem, setSelectedItem] = useState(null)\r\n    const [sortBy, setSortBy] = useState('created_at')\r\n    const [messages, setMessages] = useState([])\r\n    console.log(messages)\r\n\r\n    useEffect(() => {\r\n        getItems()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      if (selectedItem !== null) setShowForm(true)\r\n  },[selectedItem])\r\n\r\n  function onBackButtonClick(){\r\n    setShowForm(false);\r\n    getItems();\r\n  }\r\n\r\n  function removeMessage(index) {\r\n    let newMessages = [\r\n\r\n    ]\r\n    messages.forEach(function(msg, i){\r\n      if (i !== index) newMessages.push(msg)\r\n    })\r\n    setMessages(newMessages)\r\n  }\r\n\r\n    function getItems()  {\r\n        setLoading(true)\r\n        fetch(props.fetchUrl)\r\n        .then(res => res.text())\r\n        .then(res =>{\r\n          const newItems = JSON.parse(res);\r\n          let columnArray = []\r\n          for (var i in newItems[0]){\r\n            columnArray.push(i)\r\n          }\r\n          columnArray = renderTableColumnsArray(columnArray, props.fetchUrl)\r\n          setColumns(columnArray)\r\n          if (props.fetchUrl !== '/about') setItems(JSON.parse(res))\r\n          else {\r\n            setSelectedItem(JSON.parse(res)[0]);\r\n            setShowForm(true);\r\n          }\r\n\r\n          window.scrollTo({top:0,behavior:'smooth'})\r\n          setLoading(false)\r\n        })\r\n    }\r\n\r\n    function beforeDeleteItem(item) {\r\n      console.log(\"before delete item\");\r\n        if (props.fetchUrl === '/messages') deleteItem(item)\r\n        else deleteFile(item)\r\n    }\r\n\r\n    function deleteFile(item) {\r\n      console.log(\"delete file\");\r\n      setLoading(true)\r\n      $.ajax({\r\n        url:'/delete',\r\n        type:'POST',\r\n        data:{path:item.filename}\r\n      }).done(function(res){\r\n        deleteItem(item)\r\n      })\r\n    }\r\n\r\n    function deleteItem(item) {\r\n      console.log(\"delete\")\r\n        $.ajax({\r\n            url:'http://localhost:80'+ props.fetchUrl + '/' + (item.picture_id ? item.picture_id : item.msg_id),\r\n            type:'DELETE'\r\n          }).done(function(res) {\r\n            beforeGetItems('delete', item, 'success')\r\n          })\r\n    }\r\n\r\n    function onReadButtonClick(item) {\r\n        $.ajax({\r\n            url:'http://localhost:80'+ props.fetchUrl + '/' + (item.picture_id ? item.picture_id : item.msg_id),\r\n            type:'PUT', \r\n            data: {read:(item.read === true ? false : true)}\r\n          }).done(function(res) {\r\n            getItems();\r\n          })\r\n    }\r\n\r\n    function onFinishFormSubmit(action, item, type) {\r\n      setShowForm(false)\r\n      if (action) beforeGetItems(action, item, type)\r\n      else getItems()\r\n    }\r\n \r\n    function beforeGetItems(action, item, type) {\r\n      console.log(action, item, type)\r\n      const itemType = item.picture_id > -1 ? 'Bilden' : 'Meddelande';\r\n      let title = itemType + ' '\r\n      if (itemType === 'Bilden') {\r\n        if (action === 'create') title += 'är tillagd'\r\n        else if (action === 'update') title += 'är uppdaterad'\r\n        else title += 'är borttagen'\r\n      } \r\n      else title += 'är borttaget'\r\n      \r\n      const msg = {type:type, title:title}\r\n      const newMessages =[...messages, msg]\r\n      setMessages(newMessages)\r\n      getItems();\r\n    }\r\n\r\n    const excludedColumnsList = ['picture_id', 'msg_id', 'read']\r\n\r\n    const columnsDisplay = columns.map((column, index) => {\r\n      if (column.menuOnly === false) {\r\n        return(\r\n          <th key={index} scope=\"col\">\r\n              {column.displayName}\r\n          </th>\r\n      )\r\n      }\r\n    })\r\n\r\n    function sortItems(a, b) {\r\n      if (a[sortBy] < b[sortBy]) return -1;\r\n      if (a[sortBy] > b[sortBy]) return 1;\r\n      return 0\r\n    }\r\n\r\n    const itemsDisplay = items.sort(sortItems).map((item, index) => (\r\n      <tr className={item.read === true ? 'read' : ''} key={index}>\r\n        {columns.map((column, index) => {\r\n          if (column.menuOnly === false) {\r\n            let cellDisplay = item[column.columnName];\r\n            if (column.columnName === 'filename') {\r\n                cellDisplay =(\r\n                  <div className=\"img-thumbnail\">\r\n                    <img src={item[column.columnName]}/>\r\n                  </div>\r\n                )\r\n            } else if (column.columnName === 'created_at') {\r\n              let today = new Date(item[column.columnName]);\r\n              cellDisplay = today.getDate() + \".\"+ parseInt(today.getMonth()+1) +\".\"+today.getFullYear();\r\n            }\r\n            return(\r\n                <td key={index}>\r\n                  {cellDisplay}\r\n                </td>\r\n              )\r\n          }\r\n        })}\r\n        <td>\r\n          <TableRowUserMenu\r\n            item={item}\r\n            deleteItem={beforeDeleteItem}\r\n            setSelectedItem={setSelectedItem}\r\n            fetchUrl={props.fetchUrl}\r\n            onReadButtonClick={onReadButtonClick}\r\n          />\r\n        </td>\r\n      </tr>\r\n    ))\r\n\r\n    let tableDisplay, formDisplay;\r\n    if (showForm === false) {\r\n      console.log(items)\r\n      if (items.length === 0) {\r\n        tableDisplay = 'Inga meddelanden'\r\n      } else {\r\n        let addButtonDisplay;\r\n        if (props.fetchUrl === '/pictures') {\r\n          addButtonDisplay = (\r\n            <a onClick={() => setShowForm(true)}className=\"ui green basic button add-img-button\">\r\n              <i className=\"plus icon\"></i>\r\n              Lägg till bild\r\n            </a>\r\n          )\r\n        }\r\n  \r\n        let loadingDisplay;\r\n        if (loading === true) {\r\n          loadingDisplay = (\r\n            <div className=\"ui active inverted dimmer\">\r\n              <div className=\"ui text loader\"><b>loading...</b></div>\r\n            </div>\r\n        )\r\n        }\r\n  \r\n        tableDisplay = (\r\n          <React.Fragment>\r\n            <div className=\"table-header\">\r\n              <h1>{renderDisplayName(props.fetchUrl.split('/')[1])}</h1>\r\n              <div className=\"ui text menu\">\r\n                <div className=\"header item\">Sortera</div>\r\n                {columns.map((column, index) => (\r\n                  <a key={index} onClick={() => setSortBy(column.columnName)} className={'item ' + (sortBy === column.columnName ? 'active' : '')}>\r\n                    {column.displayName}\r\n                  </a>\r\n                ))}\r\n              </div>\r\n              {addButtonDisplay}\r\n            </div>\r\n            <div className={\"dimmable \" + props.fetchUrl.split('/')[1]}>\r\n              {loadingDisplay}\r\n              <table className=\"ui celled table\">\r\n              <thead>\r\n                  <tr>\r\n                  {columnsDisplay}\r\n                  <th>{props.fetchUrl === '/pictures' ? 'Redigera/ Ta bort bild' : 'Radera meddelande'}</th>\r\n                  </tr>\r\n              </thead>\r\n              <tbody>\r\n              {itemsDisplay}\r\n              </tbody>\r\n              </table>\r\n            </div>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    } else {\r\n      formDisplay = (\r\n        <ItemForm\r\n          columns={columns}\r\n          selectedItem={selectedItem}\r\n          onFinishFormSubmit={onFinishFormSubmit}\r\n          onBackButtonClick={onBackButtonClick}\r\n          fetchUrl={props.fetchUrl}\r\n        />\r\n      )\r\n    }\r\n\r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n\r\n    return(\r\n      <div className=\"admin-table-container\">\r\n        <AdminMessagesContainer messages={messages} removeMessage={removeMessage}/>\r\n        <SRLWrapper options={options}>\r\n          {tableDisplay}\r\n        </SRLWrapper>\r\n        {formDisplay}\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction TableRowUserMenu(props) {\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n  \r\n    function onApprovedDeleteClick() {\r\n      setOpen(false)\r\n  \r\n      props.deleteItem(props.item)\r\n    }\r\n  \r\n    let readButtonDisplay;\r\n\r\n    let editButtonDisplay;\r\n    if (props.fetchUrl === '/pictures') {\r\n      editButtonDisplay = (\r\n      <button className=\"ui icon blue button\" onClick={()=> props.setSelectedItem(props.item)}>\r\n        <i className=\"pencil alternate icon\"></i>\r\n      </button>) \r\n    } else {\r\n        readButtonDisplay = (\r\n            <button className=\"ui icon button\" onClick={()=> props.onReadButtonClick(props.item)}>\r\n              <i className={'envelope ' + (props.item.read === true ? 'open' : '') + '  outline icon'}></i>\r\n            </button>)\r\n    }\r\n    \r\n    return(\r\n      <div className=\"table-row-user-menu\">\r\n          {readButtonDisplay}\r\n          {editButtonDisplay}\r\n          <Modal\r\n            basic\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            size='tiny'\r\n            trigger={<Button icon color='red'><Icon name='trash' /></Button>}\r\n          >\r\n            <Header icon>\r\n              <Icon name='trash alternate outline' />\r\n                Ta bort bild\r\n              </Header>\r\n            <Modal.Content>\r\n              <p>\r\n                Vill du radera den här bilden?\r\n              </p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button basic color='red' inverted onClick={() => setOpen(false)}>\r\n                <Icon name='remove' /> Nej\r\n              </Button>\r\n              <Button color='green' inverted onClick={() => onApprovedDeleteClick()}>\r\n                <Icon name='checkmark' /> Ja\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n      </div>\r\n    )\r\n  }\r\n\r\nfunction AdminMessagesContainer(props) {\r\n\r\n  const messagesDisplay = props.messages.map((message, index) => (\r\n    <AdminMsg key={index} message={message} removeMessage={()=> props.removeMessage(index)}/>\r\n  ))\r\n\r\n  return(\r\n    <div id=\"messages-container\">\r\n      {messagesDisplay}\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction AdminMsg(props) {\r\n  const [fadeout, setFadeout] =useState(false)\r\n  \r\n  const message = props.message\r\n  \r\n  useEffect(()=> {\r\n    setTimeout(() => {\r\n      setFadeout(true)\r\n      setTimeout(() => {\r\n        props.removeMessage()\r\n      }, 2000);\r\n    }, 3000);\r\n  },[])\r\n\r\n  return(\r\n    <div className={\"ui \"+ message.type + \" message \" + (fadeout === true ? 'fadeout' : '')}>\r\n      <i className=\"close icon\" onClick={e => props.removeMessage()}></i>\r\n      <div className=\"header\">\r\n        {message.title}\r\n      </div>\r\n      <p>{message.msg}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DBTableRender;","import React, {useState, useEffect} from 'react';\r\nimport './Admin.css';\r\nimport DBTableRender from './DbTableRender';\r\nimport $ from 'jquery';\r\nimport { Icon, Label, Menu } from 'semantic-ui-react';\r\nimport {renderDisplayName} from '../helpers';\r\n\r\nfunction Admin(props) {\r\n\r\n  const [dbTables, setDbTables] = useState(['pictures', 'messages', 'about']);\r\n  const [currentSection, setCurrentSection] = useState('admin');\r\n  const [msgCounter, setMsgCounter] = useState(0)\r\n\r\n  useEffect(()=> {\r\n    countMsg()\r\n  },[])\r\n\r\n  function countMsg() {\r\n    $.ajax({\r\n      url:'http://localhost:80/countreadmsg',\r\n      type:'GET'\r\n    }).done(function(res) {\r\n      setMsgCounter(res[0].count);\r\n    })\r\n  }\r\n\r\n  const navItemsDisplay = dbTables.map((table, index) => {\r\n    let menuItemclassName = 'item';\r\n    if (currentSection === table) menuItemclassName += ' active';\r\n    let msgCounterDisplay;\r\n    if (table === 'messages' && msgCounter !== '0') {\r\n      msgCounterDisplay = (\r\n        <Label color='red' floating>\r\n          {msgCounter}\r\n        </Label>\r\n      )\r\n    }\r\n    return (\r\n      <Menu.Item as=\"a\" className={menuItemclassName} onClick={() => setCurrentSection(table)}>\r\n        <Icon name={table === 'pictures' ? 'picture' : table === 'messages' ? 'mail' : 'user'}/>\r\n        {renderDisplayName(table)}\r\n        {msgCounterDisplay}\r\n      </Menu.Item>\r\n    )\r\n  })\r\n\r\n  let contentDisplay = 'hello im admin'\r\n  if (currentSection !== \"admin\"){\r\n    contentDisplay = dbTables.map((table, index) => {\r\n      if (currentSection === table) {\r\n        return(\r\n          <DBTableRender key={index} fetchUrl={\"/\" + table}/>\r\n        )\r\n      }\r\n    })\r\n  }\r\n    \r\n  let mainMenuItemclassNameName = 'item';\r\n  if (currentSection === \"admin\") mainMenuItemclassNameName += ' active';\r\n\r\n  return(\r\n    <section id=\"admin\">\r\n      <Menu compact>\r\n          <Menu.Item as='a' className={mainMenuItemclassNameName} onClick={() => setCurrentSection(\"admin\")}>\r\n            Admin main\r\n          </Menu.Item>\r\n          {navItemsDisplay}\r\n      </Menu>\r\n      {contentDisplay}\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Admin;\r\n\r\n\r\n\r\n/* if (obj.column) {\r\n  let errorIndex = -1;\r\n  errors.forEach(function(error, index){\r\n    if (error.column === obj.column) {\r\n      errorIndex = index\r\n    }\r\n  })\r\n  let newErrors;\r\n    if (errorIndex > -1) {\r\n      const newErrors = [\r\n        ...errors.slice(0, errorIndex -1), obj,\r\n        ...errors.slice(errorIndex +1, errors.length -1)\r\n        ]\r\n    } else {\r\n      newErrors = [\r\n        ...errors, obj\r\n      ]\r\n    }\r\n  setErrors(newErrors)\r\n} */","import React, { useEffect, useState, Suspense, lazy } from 'react';\r\nimport { SRLWrapper } from \"simple-react-lightbox\";\r\nimport { breakArrayIntoChunksHelper } from '../helpers';\r\nimport './SubGallery.css';\r\nimport { isMobile } from \"react-device-detect\";\r\n\r\nfunction SubGallery(props) {\r\n \r\n    const [pictures, setPictures] = useState([])\r\n    const [chunksArray, setChunksArray ] = useState([])\r\n    const [windowSize, setWindowSize] = useState(window.innerWidth > 577 ? 'normal' :  'small')\r\n    const [ isBlurred, setIsBlurred ] = useState(false); \r\n  \r\n    useEffect(() => {\r\n      getPictures()\r\n      window.addEventListener('resize', onWindowResize)\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      handelPictures(pictures)\r\n    },[windowSize])\r\n\r\n    function onWindowResize() {\r\n      let currentWindowSize = window.innerWidth > 577 ? 'normal' :  'small';\r\n      if (currentWindowSize !== windowSize) {\r\n        setWindowSize(currentWindowSize)\r\n      }\r\n    }\r\n  \r\n    function getPictures() {\r\n      fetch('/pictures/' + props.pictureType)\r\n      .then(res => res.text())\r\n      .then(res =>{\r\n        handelPictures(JSON.parse(res))\r\n        setPictures(JSON.parse(res))\r\n      })\r\n    }\r\n\r\n    function handelPictures(pics) {\r\n      let numChunks = 2;\r\n      if (window.innerWidth < 577) numChunks = 1;\r\n      const newPictures = breakArrayIntoChunksHelper(numChunks,pics)\r\n      setChunksArray(newPictures);\r\n    }\r\n  \r\n    const galleryDisplay = chunksArray.map((subArray, subIndex) => (\r\n        <SubGalleryRow key={subIndex} subArray={subArray}/>\r\n    ))\r\n  \r\n    const options={\r\n      thumbnails:{\r\n        showThumbnails:false\r\n      },\r\n      buttons: {\r\n        showDownloadButton: false\r\n      }\r\n    }\r\n    \r\n    const callbacks = {\r\n      onSlideChange: object => console.log(object),\r\n      onLightboxOpened: object => setIsBlurred(true),\r\n      onLightboxClosed: object => setIsBlurred(false),\r\n      onCountSlides: object => console.log(object)\r\n  };\r\n  \r\n    let galleryStyle;\r\n    if (isBlurred){\r\n      galleryStyle = {\r\n        filter:\"blur(5px)\"\r\n      }\r\n    }\r\n\r\n    return(\r\n        <div className=\"sub-gallery\">\r\n          <SRLWrapper \r\n            callbacks={callbacks}\r\n            options={options}>\r\n              <div id=\"gallery-pictures\" style={galleryStyle}>{galleryDisplay}</div>\r\n          </SRLWrapper>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  function SubGalleryRow(props) {\r\n    \r\n    const [hovered, setHovered] = useState(null)\r\n\r\n    const SubGalleryPictureDisplay = props.subArray.map((picture, index) => (\r\n        <SubGalleryPicture \r\n            key={index} \r\n            picture={picture}\r\n            hovered={hovered}\r\n            setHovered={setHovered}\r\n        />\r\n    ))  \r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            {SubGalleryPictureDisplay}\r\n        </div>\r\n    )\r\n  }\r\n\r\n  function SubGalleryPicture(props) {\r\n\r\n    const picture = props.picture;\r\n    let initContainerWidth = (window.innerWidth*0.45) -30.81\r\n    if (window.innerWidth < 577) initContainerWidth = (window.innerWidth*0.9) -30.81\r\n    const [containerWidth, setContainerWidth] = useState(initContainerWidth)\r\n    const [loadedImgWidth,setLoadedImgWidth] = useState(null)\r\n    const [loadedImgHeight, setLoadedImgHeight] = useState(null)\r\n    const [imgWidth, setImgWidth] = useState(null)\r\n    const [imgHeight, setImgHeight] = useState(null)\r\n    const [imgTop, setImgTop] = useState(null)\r\n    const [imgLeft, setImgLeft] = useState(null)\r\n    const [isHovered, setIsHovered] = useState(false)\r\n    const [differential, setDifferential] = useState(null)\r\n    const [isResized, setIsResized] = useState(false)\r\n    const [inFrame, setInFrame] = useState(false)\r\n\r\n    let resizeTimeout;\r\n\r\n    useEffect(() => {\r\n      window.addEventListener('resize', onWindowResize);\r\n      if (isMobile === true) window.addEventListener('scroll', onMobileScroll);\r\n    },[])\r\n\r\n    useEffect(() => {\r\n      setIsHovered(inFrame)\r\n    },[inFrame])\r\n\r\n    useEffect(() => {\r\n      updateImgDimensions();\r\n    },[containerWidth])\r\n\r\n    useEffect(() => {\r\n      if (loadedImgHeight !== null && loadedImgWidth !== null) updateImgDimensions();\r\n    },[loadedImgHeight, loadedImgWidth])\r\n\r\n\r\n    function onMobileScroll() {\r\n      const el = document.getElementById('picture-' + picture.picture_id)\r\n      var viewportOffset =\r\n      el.getBoundingClientRect();\r\n      //these are relative to the viewport, i.e the window\r\n      var top = viewportOffset.top;\r\n      var left = viewportOffset.left;\r\n      const elHeight = el.offsetHeight\r\n      const newInFrame = (top + elHeight) < window.innerHeight && top > 0\r\n      setInFrame(newInFrame)\r\n    }\r\n  \r\n    function onWindowResize(){\r\n      setIsResized(true)\r\n      clearTimeout(resizeTimeout);\r\n      resizeTimeout = setTimeout(resizedw, 500);\r\n      let initContainerWidth = (window.innerWidth*0.45) -30.81\r\n      if (window.innerWidth < 577) initContainerWidth = (window.innerWidth*0.9) -30.81\r\n      setContainerWidth(initContainerWidth)\r\n    }\r\n\r\n    function resizedw(){\r\n      setIsResized(false)\r\n    }\r\n\r\n    function onImgLoad(e) {\r\n      setLoadedImgHeight(e.target.naturalHeight)\r\n      setLoadedImgWidth(e.target.naturalWidth)\r\n    }\r\n\r\n    function updateImgDimensions() {\r\n      \r\n      let diff, adjImgTop, adjImgLeft;\r\n      if (loadedImgWidth > loadedImgHeight) {\r\n        diff = loadedImgHeight / containerWidth\r\n        adjImgLeft = ((loadedImgWidth /diff) - containerWidth) / 2\r\n      }\r\n      else {\r\n        diff = loadedImgWidth / containerWidth\r\n        adjImgTop = ((loadedImgHeight /diff) - containerWidth) / 2\r\n      }\r\n\r\n      setImgHeight(loadedImgHeight / diff)\r\n      setImgWidth(loadedImgWidth /diff) \r\n      setImgLeft(adjImgLeft)\r\n      setImgTop(adjImgTop)\r\n      setDifferential(diff)\r\n    }\r\n\r\n    let imgStyle = {}, imgClassName = '';\r\n    if (imgHeight !== null) {\r\n      let currentWidth = imgWidth, currentHeight = imgHeight, currentTop = imgTop, currentLeft = imgLeft;\r\n      if (isHovered === true) {\r\n        currentWidth = loadedImgWidth /(differential * 0.9);\r\n        currentHeight = loadedImgHeight /(differential * 0.9);\r\n        if (currentWidth > currentHeight) currentLeft = ((loadedImgWidth /(differential * 0.9)) - containerWidth) / 2;\r\n        else currentTop = ((loadedImgHeight /(differential * 0.9)) - containerWidth) / 2;\r\n      }\r\n      imgStyle = {\r\n        width:currentWidth,\r\n        height:currentHeight,\r\n        left:'-' + currentLeft + 'px',\r\n        top:'-' + currentTop + 'px'\r\n      }\r\n      imgClassName = isResized === false ? 'loaded' : ''\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"box\" id={\"picture-\" + picture.picture_id}>\r\n          <div className=\"inner-box\" onMouseEnter={()=> setIsHovered(true)} onMouseLeave={()=> setIsHovered(false)}>\r\n            <img style={imgStyle} className={imgClassName} src={picture.filename} onLoad={e => onImgLoad(e)}/>\r\n            <div className=\"info-container\">\r\n                <div className=\"left-container\">\r\n                    <h2>\r\n                        {picture.caption}\r\n                    </h2>\r\n                    <p>\r\n                        {picture.description}\r\n                    </p>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                <span>\r\n                    {picture.price.split(\"kr\")[0]}\r\n                    <span style={{marginLeft:\"3px\"}}>kr</span>\r\n                </span>\r\n                </div>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n\r\n  export default SubGallery;","import React, {useState, useEffect} from 'react';\r\nimport $ from 'jquery';\r\n\r\nfunction UserSignin(props) {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  \r\n  function onSignin() {\r\n\r\n    $.ajax({\r\n      url:'/signin',\r\n      type:'POST',\r\n      data: {email:email, password:password }\r\n    }).done(function(res) {\r\n    })\r\n  } \r\n\r\n  return(\r\n  <section>\r\n  <div className=\"page-login\">\r\n    <div className=\"ui centered grid container\">\r\n      <div className=\"nine wide column\">\r\n        <div className=\"ui icon warning message\">\r\n          <i className=\"lock icon\"></i>\r\n          <div className=\"content\">\r\n            <div className=\"header\">\r\n              Login failed!\r\n            </div>\r\n              <p>You might have misspelled your username or password!</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"ui fluid card\">\r\n          <div className=\"content\">\r\n            <form className=\"ui form\" method=\"POST\">\r\n              <div className=\"field\">\r\n                <label>Email</label>\r\n                <input type=\"text\" name=\"user\" placeholder=\"User\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n              </div>\r\n              <div className=\"field\">\r\n                <label>Password</label>\r\n                <input type=\"password\" name=\"pass\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n              </div>\r\n              <button className=\"ui primary labeled icon button\" type=\"submit\" onClick={onSignin}>\r\n                <i className=\"unlock alternate icon\"></i>\r\n                Login\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </section>\r\n  )\r\n  }\r\n\r\n  export default UserSignin","import React, { useEffect, useState, Suspense, lazy } from 'react';\nimport './App.css';\nimport GallerySection from './gallery/Gallery';\nimport $ from 'jquery';\nimport SimpleReactLightbox from \"simple-react-lightbox\";\nimport { Link, Route } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport Admin from './admin/Admin';\nimport SubGallery from './gallery/SubGallery';\nimport UserSignin from './partials/signin';\n\nfunction App(props) {\n\n  const [navigation, setNavigation] = useState([])\n\n  useEffect(() => {\n    getNavigation()\n  },[])\n\n  function getNavigation() {\n    fetch('/navigation')\n    .then(res => res.text())\n    .then(res =>{\n      setNavigation(JSON.parse(res));\n    })\n  }\n\n  let headerDisplay = <Header navigation={navigation}/>\n  if (window.location.href.indexOf('/admin') !== -1) headerDisplay=''\n\n  return (\n    <div className=\"app\">\n      <SimpleReactLightbox>\n        {headerDisplay}\n        <SectionsContainer\n          navigation={navigation} \n        />\n      </SimpleReactLightbox>  \n    </div>\n  );\n}\n\nfunction Header(props) {\n\n  const [ showdropMenu, setShowDropMenu ] = useState(false)\n\n  const navItemsDisplay = props.navigation.map((menuItem, index) => {\n    if (menuItem.title !== 'home') {\n      return (\n        <li key={index}><Link onClick={()=> setShowDropMenu(false)} to={menuItem.nav_link}>{menuItem.display_name}</Link></li>\n      )\n    }\n  })\n\n  let menuDisplay = (\n    <nav>\n      <ul>\n        {navItemsDisplay}\n      </ul>\n    </nav>\n  );\n  if (window.innerWidth < 577) {\n    menuDisplay = <i className={(showdropMenu === true ? 'close' : 'bars') +  \" icon\"} onClick={()=> setShowDropMenu(showdropMenu === true ? false : true)}></i>\n  } \n\n  let dropMenuDisplay;\n  if (showdropMenu === true) {\n    dropMenuDisplay = (\n      <div className=\"drop-menu-container\">\n        <ul>\n          {navItemsDisplay}\n        </ul>\n      </div>\n    )\n  }\n  return (\n    <header>\n      <h1>\n        <a id=\"main\" href=\"/\">Charlotte Karlbom</a>\n      </h1>\n        {menuDisplay}\n        {dropMenuDisplay}\n    </header>\n  )\n}\n\nfunction SectionsContainer(props) {\n\n  const sectionsDisplay = props.navigation.map((section,index) => {\n      let sectionHtmlDisplay = (\n        <section key={index} id={section.nav_link}>\n          <h2>{section.title}</h2>\n        </section>\n      )\n      \n      switch (section.title) {\n        case 'signin':\n          sectionHtmlDisplay = null;\n          break;\n        case 'home':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/\"><GallerySection/></Route>\n          )\n          break;\n        case 'paintings':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/paintings\"><PaintingsSection/></Route>\n          )\n          break;\n        case 'sculptures':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/sculptures\"><SculpturesSection/></Route>\n          )\n          break;\n        case 'contact':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/contact\"><ContactSection/></Route>\n          )\n          break;\n        case 'about':\n          sectionHtmlDisplay = (\n            <Route exact path=\"/about\"><AboutSection/></Route>\n          )\n          break;\n        default:\n        sectionHtmlDisplay = (\n          <Route exact path=\"/\"><GallerySection/></Route>\n        )\n          break;\n      }\n\n      return (\n        <React.Fragment key={index}>\n          {sectionHtmlDisplay}\n        </React.Fragment>\n      )\n    }\n  )\n\n  const adminSectionDisplay = (\n    <Route path=\"/admin\">\n        <Admin/>\n    </Route>\n  )\n  return(\n    <main>\n      {sectionsDisplay}\n      {adminSectionDisplay}\n      <Route exact path=\"/signin\">\n        <UserSignin/>\n      </Route>\n    </main>\n  )\n}\n\nfunction PaintingsSection(props) {\n\n  return(\n    <section id='paintings'>\n      <SubGallery pictureType={'paintings'}/>\n    </section>\n  )\n}\n\nfunction SculpturesSection(props) {\n\n  return(\n    <section id='sculptures'>\n      <SubGallery pictureType={'sculpture'}/>\n    </section>\n  )\n}\n\nfunction AboutSection(props) {\n\n  const [aboutData, setAboutData] = useState('')\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    getAbout()\n  },[])\n\n  function getAbout() {\n    fetch('/about')\n    .then(res => res.text())\n    .then(res =>{\n      setAboutData(JSON.parse(res)[0]);\n      setLoading(false)\n    })\n  }\n\n  let imgDisplay = (\n  <div class=\"ui placeholder\">\n    <div class=\"image\"></div>\n  </div>\n  )\n\n  let textDisplay = (\n    <div class=\"ui placeholder\">\n      <div class=\"paragraph\">\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n      </div>\n      <div class=\"paragraph\">\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n        <div class=\"line\"></div>\n      </div>\n    </div>\n  )\n  if (loading === false) {\n    imgDisplay = <img src={aboutData.profile_img}/>\n    textDisplay = <div dangerouslySetInnerHTML={{__html:aboutData.about_text}}></div>\n  }\n\n  return (\n   <section id=\"about\">\n     <div className=\"title\">\n       <h1>Om mig</h1>\n      </div>\n     <div className=\"row\">\n        <div className=\"col-4\">\n          <div className=\"profile-img-container\">\n            {imgDisplay}\n          </div>\n        </div>\n        <div className=\"col-8\">\n          <div className=\"description\">\n            {textDisplay}\n          </div>\n        </div>\n      </div>\n   </section>\n  )\n}\n\nfunction ContactSection(props) {\n\n  const [name, setName] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [errors, setErrors] = useState([])\n  const [isSubmitted, setIsSubmitted] = useState(false)\n\n  function onNameChange(e) {\n    setName(e.target.value)\n  }\n\n  function onEmailChange(e) {\n    setEmail(e.target.value)\n  }\n\n  function onMessageChange(e) {\n    setMessage(e.target.value)\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let newErrors = [];\n\n    var letters\n    if (name.length === 0) {\n      const nameError = {\n        msg: \"Write something here\", \n        type: \"name\"\n      }\n      newErrors.push(nameError)\n    }\n    else if (!name.match(letters)){\n      const nameError = {\n        msg: \"Please, don't use symbols\", \n        type: \"name\"\n      }\n      newErrors.push(nameError)\n    }\n\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!re.test(String(email).toLowerCase())) {\n        const emailError = {\n          msg: \"Please, use a valid email\", \n          type: \"email\"\n        }\n        newErrors.push(emailError)\n      }\n\n\n    setErrors(newErrors)\n    if (newErrors.length === 0) {\n      postMessage();\n    }\n}\n\nfunction postMessage() {\n\n\n  $.ajax({\n    url:'/messages',\n    type:'POST',\n    data: {name:name, email:email, msg:message }\n  }).done(function(res) {\n    setIsSubmitted(true)\n    setTimeout(() => {\n      window.location.href = '/'\n    }, 3000);\n  })\n}\n\n  let nameErrorDisplay, emailErrorDisplay;\n  if (errors.length > 0) {\n    errors.forEach(function(error, index){\n     if (error.type === \"name\") nameErrorDisplay = <small>{error.msg}</small>\n      else if (error.type === \"email\") emailErrorDisplay = <small>{error.msg}</small>\n    })\n  }\n\n  let formDisplay = (\n    <div id=\"contact-container\">\n      <form className=\"ui form\">\n        <div className=\"field\">\n          <label>Namn</label>\n          <input type=\"text\" value={name} className=\"form-control\" placeholder=\"Namn\" onChange={(e) => onNameChange(e)}/>\n          {nameErrorDisplay}\n        </div>\n        <div className=\"field\">\n          <label>Emailadress</label>\n          <input type=\"email\" value={email} className=\"form-control\" placeholder=\"Email\" onChange={(e) => onEmailChange(e)}/>\n          {emailErrorDisplay}\n        </div>\n        <div className=\"field\">\n          <label>Ditt meddelande</label>\n          <textarea className=\"form-control\" rows=\"5\" onChange={(e) => onMessageChange(e)}>{message}</textarea>\n        </div>\n        <button type=\"submit\" onClick={(e) => onSubmit(e)} className=\"ui submit button\">Skicka meddelande</button>\n      </form>\n    </div>\n  )\n\n  if (isSubmitted === true) formDisplay=<p>Tack för ditt meddelande!</p>\n\n  return(\n    <section id=\"contact\">\n      {formDisplay}\n    </section>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}